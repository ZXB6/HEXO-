<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>L!sten</title>
  
  
  <link href="https://zxb6.github.io/atom.xml" rel="self"/>
  
  <link href="https://zxb6.github.io/"/>
  <updated>2022-11-09T07:59:37.109Z</updated>
  <id>https://zxb6.github.io/</id>
  
  <author>
    <name>ZXXB</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学生成绩关联分析</title>
    <link href="https://zxb6.github.io/2022/11/09/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/"/>
    <id>https://zxb6.github.io/2022/11/09/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</id>
    <published>2022-11-09T07:50:16.000Z</published>
    <updated>2022-11-09T07:59:37.109Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data = pd.read_excel(<span class="string">r&#x27;D:\电子教案\数据挖掘与数据分析系列课程\数据科学_信息管理与信息系统&amp;人工智能\电子教案\理论教案\2022年秋季\04_关联分析\实验任务\学生成绩关联分析\个人信息数据采集表2022年.xlsx&#x27;</span>)</span><br><span class="line">data</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>序号</th>      <th>每周平均课外阅读时间</th>      <th>种类1</th>      <th>种类2</th>      <th>种类3</th>      <th>性别</th>      <th>是否有早读习惯</th>      <th>大英1</th>      <th>视听说1</th>      <th>大英2</th>      <th>...</th>      <th>高数1、2平均成绩</th>      <th>高考数学成绩</th>      <th>C语言成绩</th>      <th>数据结构成绩</th>      <th>省份</th>      <th>市</th>      <th>城市or农村</th>      <th>大学期间是否谈恋爱</th>      <th>大一大二加权平均分</th>      <th>每周游戏时间</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>70.0</td>      <td>67</td>      <td>74.0</td>      <td>...</td>      <td>67.0</td>      <td>113.0</td>      <td>85.0</td>      <td>89.0</td>      <td>内蒙古自治区</td>      <td>呼和浩特市</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>1-7h</td>    </tr>    <tr>      <td>1</td>      <td>2</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>67.0</td>      <td>77</td>      <td>69.0</td>      <td>...</td>      <td>79.5</td>      <td>137.0</td>      <td>82.0</td>      <td>60.0</td>      <td>江西省</td>      <td>赣州市</td>      <td>城市</td>      <td>是</td>      <td>75.0</td>      <td>7-14h</td>    </tr>    <tr>      <td>2</td>      <td>3</td>      <td>1-7h</td>      <td>娱乐消遣类</td>      <td>科普读物</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>68.0</td>      <td>79</td>      <td>67.0</td>      <td>...</td>      <td>35.0</td>      <td>128.0</td>      <td>71.0</td>      <td>75.0</td>      <td>江西省</td>      <td>上饶市</td>      <td>城市</td>      <td>否</td>      <td>74.0</td>      <td>7-14h</td>    </tr>    <tr>      <td>3</td>      <td>4</td>      <td>1-7h</td>      <td>专业用书</td>      <td>文学类</td>      <td>娱乐消遣类</td>      <td>女</td>      <td>否</td>      <td>77.0</td>      <td>74</td>      <td>66.0</td>      <td>...</td>      <td>77.0</td>      <td>122.0</td>      <td>80.0</td>      <td>88.0</td>      <td>江西省</td>      <td>宜春市</td>      <td>农村</td>      <td>否</td>      <td>80.0</td>      <td>1h以内</td>    </tr>    <tr>      <td>4</td>      <td>5</td>      <td>1-7h</td>      <td>专业用书</td>      <td>NaN</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.0</td>      <td>81</td>      <td>85.0</td>      <td>...</td>      <td>92.0</td>      <td>120.0</td>      <td>83.0</td>      <td>NaN</td>      <td>浙江省</td>      <td>金华市</td>      <td>农村</td>      <td>是</td>      <td>86.6</td>      <td>1h以内</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>125</td>      <td>1～7h</td>      <td>小说阅读</td>      <td>专业书籍</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.0</td>      <td>72</td>      <td>73.0</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <td>125</td>      <td>126</td>      <td>1~7h</td>      <td>科普类</td>      <td>专业相关</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>80.0</td>      <td>76</td>      <td>72.0</td>      <td>...</td>      <td>80.0</td>      <td>124.0</td>      <td>80.0</td>      <td>80.0</td>      <td>湖南</td>      <td>湘潭</td>      <td>城市</td>      <td>是</td>      <td>85.5</td>      <td>24+</td>    </tr>    <tr>      <td>126</td>      <td>127</td>      <td>24h以下</td>      <td>专业书籍</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <td>127</td>      <td>128</td>      <td>2－5h</td>      <td>小说</td>      <td>NaN</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>72.0</td>      <td>NaN</td>      <td>NaN</td>      <td>...</td>      <td>92.0</td>      <td>123.0</td>      <td>78.0</td>      <td>83.0</td>      <td>湖南</td>      <td>邵阳</td>      <td>农村</td>      <td>否</td>      <td>84.6</td>      <td>14h以上</td>    </tr>    <tr>      <td>128</td>      <td>130</td>      <td>1-7h</td>      <td>小说</td>      <td>文学类</td>      <td>娱乐消遣</td>      <td>男</td>      <td>否</td>      <td>80.0</td>      <td>，77</td>      <td>82.0</td>      <td>...</td>      <td>90.0</td>      <td>120.0</td>      <td>85.0</td>      <td>80.0</td>      <td>湖南</td>      <td>衡阳</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>4h</td>    </tr>  </tbody></table><p>129 rows × 28 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> data[<span class="string">&#x27;序号&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>大英1</th>      <th>大英2</th>      <th>视听说2</th>      <th>大英3</th>      <th>视听说3</th>      <th>大英4</th>      <th>视听说4</th>      <th>高考英语成绩</th>      <th>第一次参加四级考试成绩</th>      <th>高数1、2平均成绩</th>      <th>高考数学成绩</th>      <th>C语言成绩</th>      <th>数据结构成绩</th>      <th>大一大二加权平均分</th>    </tr>  </thead>  <tbody>    <tr>      <td>count</td>      <td>123.000000</td>      <td>122.000000</td>      <td>117.000000</td>      <td>105.000000</td>      <td>104.000000</td>      <td>81.000000</td>      <td>96.000000</td>      <td>116.000000</td>      <td>121.000000</td>      <td>121.000000</td>      <td>113.000000</td>      <td>108.000000</td>      <td>119.000000</td>      <td>118.000000</td>    </tr>    <tr>      <td>mean</td>      <td>76.573171</td>      <td>76.819672</td>      <td>78.000000</td>      <td>78.857143</td>      <td>77.951923</td>      <td>75.444444</td>      <td>75.145833</td>      <td>114.616379</td>      <td>452.483471</td>      <td>78.192562</td>      <td>112.455752</td>      <td>81.467593</td>      <td>81.235294</td>      <td>81.384831</td>    </tr>    <tr>      <td>std</td>      <td>7.485418</td>      <td>8.370567</td>      <td>6.452746</td>      <td>7.485150</td>      <td>7.055095</td>      <td>16.856749</td>      <td>10.103651</td>      <td>13.871829</td>      <td>72.122926</td>      <td>11.993923</td>      <td>16.275743</td>      <td>12.085226</td>      <td>9.383276</td>      <td>8.985947</td>    </tr>    <tr>      <td>min</td>      <td>52.000000</td>      <td>45.000000</td>      <td>61.000000</td>      <td>61.000000</td>      <td>60.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>79.000000</td>      <td>4.000000</td>      <td>35.000000</td>      <td>60.000000</td>      <td>0.000000</td>      <td>56.000000</td>      <td>5.000000</td>    </tr>    <tr>      <td>25%</td>      <td>70.500000</td>      <td>72.000000</td>      <td>74.000000</td>      <td>75.000000</td>      <td>73.000000</td>      <td>72.000000</td>      <td>71.000000</td>      <td>108.000000</td>      <td>411.000000</td>      <td>70.000000</td>      <td>105.000000</td>      <td>78.000000</td>      <td>76.000000</td>      <td>80.000000</td>    </tr>    <tr>      <td>50%</td>      <td>76.000000</td>      <td>77.000000</td>      <td>79.000000</td>      <td>79.000000</td>      <td>78.000000</td>      <td>80.000000</td>      <td>76.000000</td>      <td>117.500000</td>      <td>446.000000</td>      <td>80.000000</td>      <td>113.000000</td>      <td>84.500000</td>      <td>82.000000</td>      <td>81.850000</td>    </tr>    <tr>      <td>75%</td>      <td>82.000000</td>      <td>82.000000</td>      <td>82.000000</td>      <td>85.000000</td>      <td>84.000000</td>      <td>83.000000</td>      <td>80.000000</td>      <td>124.250000</td>      <td>496.500000</td>      <td>87.000000</td>      <td>123.000000</td>      <td>89.000000</td>      <td>89.000000</td>      <td>85.375000</td>    </tr>    <tr>      <td>max</td>      <td>95.000000</td>      <td>94.000000</td>      <td>95.000000</td>      <td>95.000000</td>      <td>95.000000</td>      <td>96.000000</td>      <td>95.000000</td>      <td>140.000000</td>      <td>621.000000</td>      <td>98.600000</td>      <td>138.000000</td>      <td>98.000000</td>      <td>98.000000</td>      <td>99.900000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.describe(include =[ <span class="string">&#x27;object&#x27;</span>])</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>每周平均课外阅读时间</th>      <th>种类1</th>      <th>种类2</th>      <th>种类3</th>      <th>性别</th>      <th>是否有早读习惯</th>      <th>视听说1</th>      <th>通过四级时间</th>      <th>省份</th>      <th>市</th>      <th>城市or农村</th>      <th>大学期间是否谈恋爱</th>      <th>每周游戏时间</th>    </tr>  </thead>  <tbody>    <tr>      <td>count</td>      <td>128</td>      <td>129</td>      <td>117</td>      <td>61</td>      <td>129</td>      <td>129</td>      <td>117</td>      <td>124</td>      <td>124</td>      <td>114</td>      <td>124</td>      <td>124</td>      <td>121</td>    </tr>    <tr>      <td>unique</td>      <td>29</td>      <td>18</td>      <td>20</td>      <td>19</td>      <td>2</td>      <td>3</td>      <td>27</td>      <td>5</td>      <td>25</td>      <td>71</td>      <td>2</td>      <td>2</td>      <td>28</td>    </tr>    <tr>      <td>top</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>专业用书</td>      <td>男</td>      <td>否</td>      <td>80</td>      <td>大二上</td>      <td>湖南省</td>      <td>上饶市</td>      <td>农村</td>      <td>否</td>      <td>1-7h</td>    </tr>    <tr>      <td>freq</td>      <td>56</td>      <td>47</td>      <td>40</td>      <td>16</td>      <td>72</td>      <td>127</td>      <td>17</td>      <td>81</td>      <td>32</td>      <td>6</td>      <td>73</td>      <td>85</td>      <td>36</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.mean()</span><br></pre></td></tr></table></figure><pre><code>大英1             76.573171大英2             76.819672视听说2            78.000000大英3             78.857143视听说3            77.951923大英4             75.444444视听说4            75.145833高考英语成绩         114.616379第一次参加四级考试成绩    452.483471高数1、2平均成绩       78.192562高考数学成绩         112.455752C语言成绩           81.467593数据结构成绩          81.235294大一大二加权平均分       81.384831dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看数据集是否存在缺失值</span></span><br><span class="line">data.apply(<span class="keyword">lambda</span> x:np.<span class="built_in">sum</span>(x.isnull()))</span><br></pre></td></tr></table></figure><pre><code>每周平均课外阅读时间      1种类1             0种类2            12种类3            68性别              0是否有早读习惯         0大英1             6视听说1           12大英2             7视听说2           12大英3            24视听说3           25大英4            48视听说4           33高考英语成绩         13第一次参加四级考试成绩     8通过四级时间          5高数1、2平均成绩       8高考数学成绩         16C语言成绩          21数据结构成绩         10省份              5市              15城市or农村          5大学期间是否谈恋爱       5大一大二加权平均分      11每周游戏时间          8dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数值型变量（成绩）的缺失值用平均值来填充</span></span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;大英1&#x27;</span>:data[<span class="string">&#x27;大英1&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#            &#x27;大英3&#x27;:data[&#x27;大英3&#x27;].mean(),&#x27;视听说3&#x27;:data[&#x27;视听说3&#x27;].mean(),&#x27;大英4&#x27;:data[&#x27;大英4&#x27;].mean(),&#x27;视听说4&#x27;:data[&#x27;视听说4&#x27;].mean(),</span></span><br><span class="line"><span class="comment">#            &#x27;高考英语成绩&#x27;:data[&#x27;高考英语成绩&#x27;].mean(),&#x27;第一次参加四级考试成绩&#x27;:data[&#x27;第一次参加四级考试成绩&#x27;].mean(),</span></span><br><span class="line"><span class="comment">#            &#x27;高数1、2平均成绩&#x27;:data[&#x27;高数1、2平均成绩&#x27;].mean(),&#x27;高考数学成绩&#x27;:data[&#x27;高考数学成绩&#x27;].mean(),&#x27;C语言成绩&#x27;:data[&#x27;C语言成绩&#x27;].mean(),&#x27;数据结构成绩&#x27;:data[&#x27;数据结构成绩&#x27;].mean()&#125;,inplace=True)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">s</span>):</span><br><span class="line">    s = <span class="built_in">str</span>(s)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;，&#x27;</span> <span class="keyword">in</span> s:</span><br><span class="line">        s = s.replace(<span class="string">&#x27;，&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">data[<span class="string">&#x27;视听说1&#x27;</span>] = data[<span class="string">&#x27;视听说1&#x27;</span>].apply(f)</span><br><span class="line">data[<span class="string">&#x27;视听说1&#x27;</span>] = data[<span class="string">&#x27;视听说1&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;视听说1&#x27;</span>:data[<span class="string">&#x27;视听说1&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;大英2&#x27;</span>:data[<span class="string">&#x27;大英2&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;视听说2&#x27;</span>:data[<span class="string">&#x27;视听说2&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;大英3&#x27;</span>:data[<span class="string">&#x27;大英3&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;大英4&#x27;</span>:data[<span class="string">&#x27;大英4&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;视听说3&#x27;</span>:data[<span class="string">&#x27;视听说3&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;视听说4&#x27;</span>:data[<span class="string">&#x27;视听说4&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;高考英语成绩&#x27;</span>:data[<span class="string">&#x27;高考英语成绩&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;第一次参加四级考试成绩&#x27;</span>:data[<span class="string">&#x27;第一次参加四级考试成绩&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;高数1、2平均成绩&#x27;</span>:data[<span class="string">&#x27;高数1、2平均成绩&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;高考数学成绩&#x27;</span>:data[<span class="string">&#x27;高考数学成绩&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;C语言成绩&#x27;</span>:data[<span class="string">&#x27;C语言成绩&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data.fillna(&#123;<span class="string">&#x27;数据结构成绩&#x27;</span>:data[<span class="string">&#x27;数据结构成绩&#x27;</span>].mean()&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">data</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>每周平均课外阅读时间</th>      <th>种类1</th>      <th>种类2</th>      <th>种类3</th>      <th>性别</th>      <th>是否有早读习惯</th>      <th>大英1</th>      <th>视听说1</th>      <th>大英2</th>      <th>视听说2</th>      <th>...</th>      <th>高数1、2平均成绩</th>      <th>高考数学成绩</th>      <th>C语言成绩</th>      <th>数据结构成绩</th>      <th>省份</th>      <th>市</th>      <th>城市or农村</th>      <th>大学期间是否谈恋爱</th>      <th>大一大二加权平均分</th>      <th>每周游戏时间</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>70.000000</td>      <td>67.000000</td>      <td>74.000000</td>      <td>65.0</td>      <td>...</td>      <td>67.000000</td>      <td>113.000000</td>      <td>85.000000</td>      <td>89.000000</td>      <td>内蒙古自治区</td>      <td>呼和浩特市</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>1-7h</td>    </tr>    <tr>      <td>1</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>67.000000</td>      <td>77.000000</td>      <td>69.000000</td>      <td>76.0</td>      <td>...</td>      <td>79.500000</td>      <td>137.000000</td>      <td>82.000000</td>      <td>60.000000</td>      <td>江西省</td>      <td>赣州市</td>      <td>城市</td>      <td>是</td>      <td>75.0</td>      <td>7-14h</td>    </tr>    <tr>      <td>2</td>      <td>1-7h</td>      <td>娱乐消遣类</td>      <td>科普读物</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>68.000000</td>      <td>79.000000</td>      <td>67.000000</td>      <td>75.0</td>      <td>...</td>      <td>35.000000</td>      <td>128.000000</td>      <td>71.000000</td>      <td>75.000000</td>      <td>江西省</td>      <td>上饶市</td>      <td>城市</td>      <td>否</td>      <td>74.0</td>      <td>7-14h</td>    </tr>    <tr>      <td>3</td>      <td>1-7h</td>      <td>专业用书</td>      <td>文学类</td>      <td>娱乐消遣类</td>      <td>女</td>      <td>否</td>      <td>77.000000</td>      <td>74.000000</td>      <td>66.000000</td>      <td>69.0</td>      <td>...</td>      <td>77.000000</td>      <td>122.000000</td>      <td>80.000000</td>      <td>88.000000</td>      <td>江西省</td>      <td>宜春市</td>      <td>农村</td>      <td>否</td>      <td>80.0</td>      <td>1h以内</td>    </tr>    <tr>      <td>4</td>      <td>1-7h</td>      <td>专业用书</td>      <td>NaN</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.000000</td>      <td>81.000000</td>      <td>85.000000</td>      <td>80.0</td>      <td>...</td>      <td>92.000000</td>      <td>120.000000</td>      <td>83.000000</td>      <td>81.235294</td>      <td>浙江省</td>      <td>金华市</td>      <td>农村</td>      <td>是</td>      <td>86.6</td>      <td>1h以内</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>1～7h</td>      <td>小说阅读</td>      <td>专业书籍</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.000000</td>      <td>72.000000</td>      <td>73.000000</td>      <td>72.0</td>      <td>...</td>      <td>78.192562</td>      <td>112.455752</td>      <td>81.467593</td>      <td>81.235294</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <td>125</td>      <td>1~7h</td>      <td>科普类</td>      <td>专业相关</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>80.000000</td>      <td>76.000000</td>      <td>72.000000</td>      <td>80.0</td>      <td>...</td>      <td>80.000000</td>      <td>124.000000</td>      <td>80.000000</td>      <td>80.000000</td>      <td>湖南</td>      <td>湘潭</td>      <td>城市</td>      <td>是</td>      <td>85.5</td>      <td>24+</td>    </tr>    <tr>      <td>126</td>      <td>24h以下</td>      <td>专业书籍</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.573171</td>      <td>77.350427</td>      <td>76.819672</td>      <td>78.0</td>      <td>...</td>      <td>78.192562</td>      <td>112.455752</td>      <td>81.467593</td>      <td>81.235294</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <td>127</td>      <td>2－5h</td>      <td>小说</td>      <td>NaN</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>72.000000</td>      <td>77.350427</td>      <td>76.819672</td>      <td>78.0</td>      <td>...</td>      <td>92.000000</td>      <td>123.000000</td>      <td>78.000000</td>      <td>83.000000</td>      <td>湖南</td>      <td>邵阳</td>      <td>农村</td>      <td>否</td>      <td>84.6</td>      <td>14h以上</td>    </tr>    <tr>      <td>128</td>      <td>1-7h</td>      <td>小说</td>      <td>文学类</td>      <td>娱乐消遣</td>      <td>男</td>      <td>否</td>      <td>80.000000</td>      <td>77.000000</td>      <td>82.000000</td>      <td>75.0</td>      <td>...</td>      <td>90.000000</td>      <td>120.000000</td>      <td>85.000000</td>      <td>80.000000</td>      <td>湖南</td>      <td>衡阳</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>4h</td>    </tr>  </tbody></table><p>129 rows × 27 columns</p></div><p>1、分析是否通过四级考试与来自农村或城市的相关性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_pass</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&quot;努力中&quot;</span> <span class="keyword">or</span> s == <span class="string">&quot;努力种&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;未通过&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;已通过&quot;</span>    </span><br><span class="line">data[<span class="string">&#x27;是否通过四级&#x27;</span>] = data[<span class="string">&#x27;通过四级时间&#x27;</span>].apply(is_pass)</span><br><span class="line">data</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>每周平均课外阅读时间</th>      <th>种类1</th>      <th>种类2</th>      <th>种类3</th>      <th>性别</th>      <th>是否有早读习惯</th>      <th>大英1</th>      <th>视听说1</th>      <th>大英2</th>      <th>视听说2</th>      <th>...</th>      <th>高考数学成绩</th>      <th>C语言成绩</th>      <th>数据结构成绩</th>      <th>省份</th>      <th>市</th>      <th>城市or农村</th>      <th>大学期间是否谈恋爱</th>      <th>大一大二加权平均分</th>      <th>每周游戏时间</th>      <th>是否通过四级</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>70.000000</td>      <td>67.000000</td>      <td>74.000000</td>      <td>65.0</td>      <td>...</td>      <td>113.000000</td>      <td>85.000000</td>      <td>89.000000</td>      <td>内蒙古自治区</td>      <td>呼和浩特市</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>1-7h</td>      <td>已通过</td>    </tr>    <tr>      <td>1</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>67.000000</td>      <td>77.000000</td>      <td>69.000000</td>      <td>76.0</td>      <td>...</td>      <td>137.000000</td>      <td>82.000000</td>      <td>60.000000</td>      <td>江西省</td>      <td>赣州市</td>      <td>城市</td>      <td>是</td>      <td>75.0</td>      <td>7-14h</td>      <td>未通过</td>    </tr>    <tr>      <td>2</td>      <td>1-7h</td>      <td>娱乐消遣类</td>      <td>科普读物</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>68.000000</td>      <td>79.000000</td>      <td>67.000000</td>      <td>75.0</td>      <td>...</td>      <td>128.000000</td>      <td>71.000000</td>      <td>75.000000</td>      <td>江西省</td>      <td>上饶市</td>      <td>城市</td>      <td>否</td>      <td>74.0</td>      <td>7-14h</td>      <td>已通过</td>    </tr>    <tr>      <td>3</td>      <td>1-7h</td>      <td>专业用书</td>      <td>文学类</td>      <td>娱乐消遣类</td>      <td>女</td>      <td>否</td>      <td>77.000000</td>      <td>74.000000</td>      <td>66.000000</td>      <td>69.0</td>      <td>...</td>      <td>122.000000</td>      <td>80.000000</td>      <td>88.000000</td>      <td>江西省</td>      <td>宜春市</td>      <td>农村</td>      <td>否</td>      <td>80.0</td>      <td>1h以内</td>      <td>未通过</td>    </tr>    <tr>      <td>4</td>      <td>1-7h</td>      <td>专业用书</td>      <td>NaN</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.000000</td>      <td>81.000000</td>      <td>85.000000</td>      <td>80.0</td>      <td>...</td>      <td>120.000000</td>      <td>83.000000</td>      <td>81.235294</td>      <td>浙江省</td>      <td>金华市</td>      <td>农村</td>      <td>是</td>      <td>86.6</td>      <td>1h以内</td>      <td>已通过</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>1～7h</td>      <td>小说阅读</td>      <td>专业书籍</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.000000</td>      <td>72.000000</td>      <td>73.000000</td>      <td>72.0</td>      <td>...</td>      <td>112.455752</td>      <td>81.467593</td>      <td>81.235294</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>已通过</td>    </tr>    <tr>      <td>125</td>      <td>1~7h</td>      <td>科普类</td>      <td>专业相关</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>80.000000</td>      <td>76.000000</td>      <td>72.000000</td>      <td>80.0</td>      <td>...</td>      <td>124.000000</td>      <td>80.000000</td>      <td>80.000000</td>      <td>湖南</td>      <td>湘潭</td>      <td>城市</td>      <td>是</td>      <td>85.5</td>      <td>24+</td>      <td>已通过</td>    </tr>    <tr>      <td>126</td>      <td>24h以下</td>      <td>专业书籍</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>76.573171</td>      <td>77.350427</td>      <td>76.819672</td>      <td>78.0</td>      <td>...</td>      <td>112.455752</td>      <td>81.467593</td>      <td>81.235294</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>已通过</td>    </tr>    <tr>      <td>127</td>      <td>2－5h</td>      <td>小说</td>      <td>NaN</td>      <td>NaN</td>      <td>男</td>      <td>否</td>      <td>72.000000</td>      <td>77.350427</td>      <td>76.819672</td>      <td>78.0</td>      <td>...</td>      <td>123.000000</td>      <td>78.000000</td>      <td>83.000000</td>      <td>湖南</td>      <td>邵阳</td>      <td>农村</td>      <td>否</td>      <td>84.6</td>      <td>14h以上</td>      <td>未通过</td>    </tr>    <tr>      <td>128</td>      <td>1-7h</td>      <td>小说</td>      <td>文学类</td>      <td>娱乐消遣</td>      <td>男</td>      <td>否</td>      <td>80.000000</td>      <td>77.000000</td>      <td>82.000000</td>      <td>75.0</td>      <td>...</td>      <td>120.000000</td>      <td>85.000000</td>      <td>80.000000</td>      <td>湖南</td>      <td>衡阳</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>4h</td>      <td>已通过</td>    </tr>  </tbody></table><p>129 rows × 28 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.crosstab(data[<span class="string">&#x27;是否通过四级&#x27;</span>], data[<span class="string">&#x27;城市or农村&#x27;</span>], margins=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>城市or农村</th>      <th>农村</th>      <th>城市</th>      <th>All</th>    </tr>    <tr>      <th>是否通过四级</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>已通过</td>      <td>56</td>      <td>37</td>      <td>93</td>    </tr>    <tr>      <td>未通过</td>      <td>17</td>      <td>14</td>      <td>31</td>    </tr>    <tr>      <td>All</td>      <td>73</td>      <td>51</td>      <td>124</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 卡方检验</span></span><br><span class="line"><span class="keyword">from</span>  scipy.stats <span class="keyword">import</span> chi2_contingency</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">kt = chi2_contingency(np.array([[<span class="number">54</span>, <span class="number">35</span>], [<span class="number">15</span>, <span class="number">13</span>]]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; 卡方值=%.4f\n p值=%.4f\n 自由度=%i\n expected_frep=\n%s&quot;</span>%kt)</span><br></pre></td></tr></table></figure><pre><code> 卡方值=0.1991 p值=0.6555 自由度=1 expected_frep=[[52.48717949 36.51282051] [16.51282051 11.48717949]]</code></pre><p>2、分析四级通过与大学英语成绩的相关性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取大英1至视听说4的平均成绩作为大学英语成绩</span></span><br><span class="line">data[<span class="string">&#x27;大学英语成绩&#x27;</span>] = (data[<span class="string">&#x27;大英1&#x27;</span>] + data[<span class="string">&#x27;视听说1&#x27;</span>] +  data[<span class="string">&#x27;大英2&#x27;</span>] + data[<span class="string">&#x27;视听说2&#x27;</span>] + data[<span class="string">&#x27;大英3&#x27;</span>] +  data[<span class="string">&#x27;视听说3&#x27;</span>] +</span><br><span class="line">data[<span class="string">&#x27;大英4&#x27;</span>] + data[<span class="string">&#x27;视听说4&#x27;</span>]) / <span class="number">8</span></span><br><span class="line">data[<span class="string">&#x27;大学英语成绩&#x27;</span>]</span><br></pre></td></tr></table></figure><pre><code>0      70.9487851      72.5000002      62.2500003      74.4487854      79.305556         ...    124    75.049918125    76.924918126    77.017827127    76.446180128    76.625000Name: 大学英语成绩, Length: 129, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_pass_01</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&#x27;已通过&#x27;</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">data[<span class="string">&#x27;是否通过四级&#x27;</span>] = data[<span class="string">&#x27;是否通过四级&#x27;</span>].apply(is_pass_01)</span><br><span class="line">data[[<span class="string">&#x27;是否通过四级&#x27;</span>, <span class="string">&#x27;大学英语成绩&#x27;</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>是否通过四级</th>      <th>大学英语成绩</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>70.948785</td>    </tr>    <tr>      <td>1</td>      <td>0</td>      <td>72.500000</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>62.250000</td>    </tr>    <tr>      <td>3</td>      <td>0</td>      <td>74.448785</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>79.305556</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>1</td>      <td>75.049918</td>    </tr>    <tr>      <td>125</td>      <td>1</td>      <td>76.924918</td>    </tr>    <tr>      <td>126</td>      <td>1</td>      <td>77.017827</td>    </tr>    <tr>      <td>127</td>      <td>0</td>      <td>76.446180</td>    </tr>    <tr>      <td>128</td>      <td>1</td>      <td>76.625000</td>    </tr>  </tbody></table><p>129 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#data[[&#x27;是否通过四级&#x27;, &#x27;大学英语成绩&#x27;]].corr()</span></span><br><span class="line"><span class="keyword">from</span> statsmodels.formula.api <span class="keyword">import</span> ols</span><br><span class="line"><span class="keyword">from</span> statsmodels.stats.anova <span class="keyword">import</span> anova_lm</span><br><span class="line">df1 = pd.DataFrame(&#123;<span class="string">&#x27;四级通过&#x27;</span>:data[<span class="string">&quot;是否通过四级&quot;</span>], <span class="string">&#x27;大学英语成绩&#x27;</span>: data[<span class="string">&quot;大学英语成绩&quot;</span>]&#125;)</span><br><span class="line">model = ols(<span class="string">&#x27;大学英语成绩~ 四级通过&#x27;</span>, data=df1).fit()</span><br><span class="line">anovat = anova_lm(model)</span><br><span class="line"><span class="built_in">print</span>(anovat)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>             df       sum_sq     mean_sq          F    PR(&gt;F)四级通过        1.0   346.036462  346.036462  12.969623  0.000453Residual  127.0  3388.427796   26.680534        NaN       NaN</code></pre><p>上表数据：Residual表示误差，sum_sq为离差平方和，mean_sq为均方离差，PR(&gt;F)表示F值所对应的显著水平；<br>从上表数据可知是否通过四级与大学英语成绩的显著性为0.000453，小于0.05，拒绝原假设，即认为是否通过四级与大学英语成绩显著相关</p><p>3、分析打游戏跟性别之间的相关性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[[<span class="string">&#x27;性别&#x27;</span>, <span class="string">&#x27;每周游戏时间&#x27;</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>性别</th>      <th>每周游戏时间</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>男</td>      <td>1-7h</td>    </tr>    <tr>      <td>1</td>      <td>男</td>      <td>7-14h</td>    </tr>    <tr>      <td>2</td>      <td>男</td>      <td>7-14h</td>    </tr>    <tr>      <td>3</td>      <td>女</td>      <td>1h以内</td>    </tr>    <tr>      <td>4</td>      <td>男</td>      <td>1h以内</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>男</td>      <td>NaN</td>    </tr>    <tr>      <td>125</td>      <td>男</td>      <td>24+</td>    </tr>    <tr>      <td>126</td>      <td>男</td>      <td>NaN</td>    </tr>    <tr>      <td>127</td>      <td>男</td>      <td>14h以上</td>    </tr>    <tr>      <td>128</td>      <td>男</td>      <td>4h</td>    </tr>  </tbody></table><p>129 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>(data[<span class="string">&#x27;每周游戏时间&#x27;</span>])</span><br></pre></td></tr></table></figure><pre><code>&#123;0, &#39;0-1h&#39;, &#39;0~1h&#39;, &#39;0—1&#39;, &#39;1-4h&#39;, &#39;1-7h&#39;, &#39;100h+&#39;, &#39;10h&#39;, &#39;12h&#39;, &#39;14-21h&#39;, &#39;14h-21h&#39;, &#39;14h以上&#39;, &#39;15h&#39;, &#39;1h&#39;, &#39;1h以内&#39;, &#39;1到10h&#39;, &#39;1－7h&#39;, &#39;20h&#39;, &#39;21h以上&#39;, &#39;24+&#39;, &#39;25h&#39;, &#39;3-4h&#39;, &#39;36h&#39;, &#39;4h&#39;, &#39;5h&#39;, &#39;7-14h&#39;, &#39;7h以上&#39;, 8, nan&#125;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">&#x27;每周游戏时间&#x27;</span>] = data[<span class="string">&#x27;每周游戏时间&#x27;</span>].astype(<span class="built_in">str</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">to_eval</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="comment"># 一段简单粗暴的代码，就是有点小丑</span></span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&#x27;0&#x27;</span>: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;0-1h&#x27;</span>: <span class="keyword">return</span> <span class="number">0.5</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;0~1h&#x27;</span>: <span class="keyword">return</span> <span class="number">0.5</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;1-4h&#x27;</span>: <span class="keyword">return</span> <span class="number">2.5</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;1-7h&#x27;</span>: <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;100h+&#x27;</span>: <span class="keyword">return</span> <span class="number">100</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;10h&#x27;</span>: <span class="keyword">return</span> <span class="number">10</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;12h&#x27;</span>: <span class="keyword">return</span> <span class="number">12</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;14-21h&#x27;</span>: <span class="keyword">return</span> <span class="number">18</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;14h-21h&#x27;</span>: <span class="keyword">return</span> <span class="number">18</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;15h&#x27;</span>: <span class="keyword">return</span> <span class="number">15</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;1h&#x27;</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;1h以内&#x27;</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;1到10h&#x27;</span>: <span class="keyword">return</span> <span class="number">5.5</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;1－7h&#x27;</span>: <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;20h&#x27;</span>: <span class="keyword">return</span> <span class="number">20</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;21h以上&#x27;</span>: <span class="keyword">return</span> <span class="number">21</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;24+&#x27;</span>: <span class="keyword">return</span> <span class="number">24</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;25h&#x27;</span>: <span class="keyword">return</span> <span class="number">25</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;3-4h&#x27;</span>: <span class="keyword">return</span> <span class="number">3.5</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;36h&#x27;</span>: <span class="keyword">return</span> <span class="number">36</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;4h&#x27;</span>: <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;5h&#x27;</span>: <span class="keyword">return</span> <span class="number">5</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;7-14h&#x27;</span>: <span class="keyword">return</span> <span class="number">10.5</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;7h以上&#x27;</span>: <span class="keyword">return</span> <span class="number">8</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;8&#x27;</span>: <span class="keyword">return</span> <span class="number">8</span></span><br><span class="line">    <span class="keyword">elif</span> s == <span class="string">&#x27;nan&#x27;</span>: <span class="keyword">return</span> np.NaN</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gender_01</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&#x27;男&#x27;</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">&#x27;每周游戏时间&#x27;</span>] = data[<span class="string">&#x27;每周游戏时间&#x27;</span>].apply(to_eval)</span><br><span class="line">data[<span class="string">&#x27;性别&#x27;</span>] = data[<span class="string">&#x27;性别&#x27;</span>].apply(gender_01)</span><br><span class="line">data[[<span class="string">&#x27;性别&#x27;</span>, <span class="string">&#x27;每周游戏时间&#x27;</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>性别</th>      <th>每周游戏时间</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1</td>      <td>4.0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>10.5</td>    </tr>    <tr>      <td>2</td>      <td>1</td>      <td>10.5</td>    </tr>    <tr>      <td>3</td>      <td>0</td>      <td>1.0</td>    </tr>    <tr>      <td>4</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>1</td>      <td>NaN</td>    </tr>    <tr>      <td>125</td>      <td>1</td>      <td>24.0</td>    </tr>    <tr>      <td>126</td>      <td>1</td>      <td>NaN</td>    </tr>    <tr>      <td>127</td>      <td>1</td>      <td>NaN</td>    </tr>    <tr>      <td>128</td>      <td>1</td>      <td>4.0</td>    </tr>  </tbody></table><p>129 rows × 2 columns</p></div><p>上表性别列中男性用1表示，女性用0来表示<br>每周游戏时间列则把每周游戏时间的字符串表示转换为数值型表示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[[<span class="string">&#x27;性别&#x27;</span>, <span class="string">&#x27;每周游戏时间&#x27;</span>]].corr()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>性别</th>      <th>每周游戏时间</th>    </tr>  </thead>  <tbody>    <tr>      <td>性别</td>      <td>1.000000</td>      <td>0.303514</td>    </tr>    <tr>      <td>每周游戏时间</td>      <td>0.303514</td>      <td>1.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.DataFrame(data)</span><br><span class="line">model = ols(<span class="string">&#x27;每周游戏时间~性别 &#x27;</span>, data=df2).fit()</span><br><span class="line">anovat = anova_lm(model)</span><br><span class="line"><span class="built_in">print</span>(anovat)</span><br></pre></td></tr></table></figure><pre><code>             df        sum_sq      mean_sq          F    PR(&gt;F)性别          1.0   1326.544856  1326.544856  11.871724  0.000792Residual  117.0  13073.564387   111.739867        NaN       NaN</code></pre><p>4、分析数学成绩好的同学是否计算机课程成绩也好？<br>由于数据中代表计算机课程成绩的是c语言成绩与数据结构成绩都是100分制， 而代表数学成绩的高考数学成绩为150制，则我们首先把其转化为100分制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">to_100</span>(<span class="params">grade</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">round</span>(<span class="number">100</span> * grade / <span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">data[<span class="string">&#x27;高考数学成绩（100分制）&#x27;</span>] = data[<span class="string">&#x27;高考数学成绩&#x27;</span>].apply(to_100)</span><br><span class="line">data[[<span class="string">&#x27;高考数学成绩（100分制）&#x27;</span>, <span class="string">&#x27;高考数学成绩&#x27;</span>]].head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>高考数学成绩（100分制）</th>      <th>高考数学成绩</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>75</td>      <td>113.0</td>    </tr>    <tr>      <td>1</td>      <td>91</td>      <td>137.0</td>    </tr>    <tr>      <td>2</td>      <td>85</td>      <td>128.0</td>    </tr>    <tr>      <td>3</td>      <td>81</td>      <td>122.0</td>    </tr>    <tr>      <td>4</td>      <td>80</td>      <td>120.0</td>    </tr>  </tbody></table></div><p>取高考数学成绩和数一数二成绩的均分作为 数学成绩的样本数据<br>取c语言成绩与数据结构成绩的均分作为 计算机成绩的样本数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">&#x27;数学成绩(样本)&#x27;</span>] = (data[<span class="string">&#x27;高考数学成绩（100分制）&#x27;</span>] + data[<span class="string">&#x27;高数1、2平均成绩&#x27;</span>]) / <span class="number">2</span></span><br><span class="line">data[<span class="string">&#x27;计算机成绩(样本)&#x27;</span>] = (data[<span class="string">&#x27;C语言成绩&#x27;</span>] + data[<span class="string">&#x27;数据结构成绩&#x27;</span>]) / <span class="number">2</span></span><br><span class="line">data[[<span class="string">&#x27;数学成绩(样本)&#x27;</span>, <span class="string">&#x27;计算机成绩(样本)&#x27;</span>]].head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>数学成绩(样本)</th>      <th>计算机成绩(样本)</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>71.00</td>      <td>87.000000</td>    </tr>    <tr>      <td>1</td>      <td>85.25</td>      <td>71.000000</td>    </tr>    <tr>      <td>2</td>      <td>60.00</td>      <td>73.000000</td>    </tr>    <tr>      <td>3</td>      <td>79.00</td>      <td>84.000000</td>    </tr>    <tr>      <td>4</td>      <td>86.00</td>      <td>82.117647</td>    </tr>    <tr>      <td>5</td>      <td>83.00</td>      <td>91.000000</td>    </tr>    <tr>      <td>6</td>      <td>71.50</td>      <td>77.500000</td>    </tr>    <tr>      <td>7</td>      <td>83.25</td>      <td>71.000000</td>    </tr>    <tr>      <td>8</td>      <td>70.50</td>      <td>65.500000</td>    </tr>    <tr>      <td>9</td>      <td>71.00</td>      <td>59.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span>  <span class="comment"># 设置字体为SimHei</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span>  <span class="comment"># 解决负号“-”显示异常</span></span><br><span class="line">plt.scatter(data[<span class="string">&#x27;数学成绩(样本)&#x27;</span>], data[<span class="string">&#x27;计算机成绩(样本)&#x27;</span>])</span><br><span class="line">plt.title(<span class="string">&#x27;数学成绩与计算机成绩散点图&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;计算机成绩&#x27;</span>, size=<span class="number">12</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;数学成绩&#x27;</span>, size=<span class="number">12</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90_files/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90_28_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[[<span class="string">&#x27;数学成绩(样本)&#x27;</span>, <span class="string">&#x27;计算机成绩(样本)&#x27;</span>]].corr()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>数学成绩(样本)</th>      <th>计算机成绩(样本)</th>    </tr>  </thead>  <tbody>    <tr>      <td>数学成绩(样本)</td>      <td>1.00000</td>      <td>0.27043</td>    </tr>    <tr>      <td>计算机成绩(样本)</td>      <td>0.27043</td>      <td>1.00000</td>    </tr>  </tbody></table></div><p>关联规则分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mlxtend.preprocessing <span class="keyword">import</span> TransactionEncoder</span><br><span class="line">data[[<span class="string">&#x27;种类1&#x27;</span>, <span class="string">&#x27;种类2&#x27;</span>, <span class="string">&#x27;种类3&#x27;</span>]].head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>种类1</th>      <th>种类2</th>      <th>种类3</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>    </tr>    <tr>      <td>1</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>    </tr>    <tr>      <td>2</td>      <td>娱乐消遣类</td>      <td>科普读物</td>      <td>NaN</td>    </tr>    <tr>      <td>3</td>      <td>专业用书</td>      <td>文学类</td>      <td>娱乐消遣类</td>    </tr>    <tr>      <td>4</td>      <td>专业用书</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <td>5</td>      <td>文学类</td>      <td>专业用书</td>      <td>NaN</td>    </tr>    <tr>      <td>6</td>      <td>文学类</td>      <td>娱乐消遣类</td>      <td>NaN</td>    </tr>    <tr>      <td>7</td>      <td>文学类</td>      <td>娱乐消遣类</td>      <td>专业用书</td>    </tr>    <tr>      <td>8</td>      <td>科普读物</td>      <td>文学类</td>      <td>娱乐消遣类</td>    </tr>    <tr>      <td>9</td>      <td>文学类</td>      <td>娱乐消遣类</td>      <td>NaN</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">item_list = []</span><br><span class="line">index_lis = data.index</span><br><span class="line"><span class="keyword">for</span> ind <span class="keyword">in</span> index_lis:</span><br><span class="line">    item_list.append([data.loc[ind][<span class="string">&#x27;种类1&#x27;</span>], data.loc[ind][<span class="string">&#x27;种类2&#x27;</span>], data.loc[ind][<span class="string">&#x27;种类3&#x27;</span>]])</span><br><span class="line">item_list</span><br></pre></td></tr></table></figure><pre><code>[[&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;, nan], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, nan, nan], [&#39;文学类&#39;, &#39;专业用书&#39;, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;科普读物&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;, nan, nan], [&#39;娱乐消遣类&#39;, nan, nan], [&#39;文学类&#39;, nan, nan], [&#39;专业用书&#39;, &#39;文学类&#39;, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;娱乐消遣类&#39;, nan, nan], [&#39;文学类&#39;, &#39;科普读物&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, nan, nan], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, nan], [&#39;科普读物&#39;, &#39;应用技术类&#39;, &#39;娱乐消遣类&#39;], [&#39;应用技术类&#39;, &#39;科普读物&#39;, nan], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;, nan], [&#39;专业用书&#39;, &#39;应用技术类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;, nan], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, nan], [&#39;专业用书&#39;, nan, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;杂志类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, nan, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, nan, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;科普读物&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;应用技术类&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, nan, nan], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, nan], [&#39;专业用书&#39;, &#39;文学类&#39;, nan], [&#39;专业用书&#39;, &#39;应用技术类&#39;, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;科普读物&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;娱乐消遣&#39;, &#39;专业用书&#39;, nan], [&#39;文学类&#39;, &#39;心理学类&#39;, &#39;娱乐消遣&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学书&#39;, &#39;心理学类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣&#39;, &#39;科普类&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, nan], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;哲学类&#39;, &#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;], [&#39;科幻类&#39;, &#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;文学类&#39;, &#39;专业相关类&#39;, &#39;新闻类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学名著&#39;, &#39;军事类&#39;], [&#39;专业用书&#39;, &#39;娱乐&#39;, &#39;文学名著&#39;], [&#39;国内外经典小说&#39;, &#39;科普类&#39;, &#39;名著&#39;], [&#39;专业用书&#39;, &#39;娱乐&#39;, nan], [&#39;专业用书&#39;, &#39;文学&#39;, nan], [&#39;专业用书&#39;, &#39;娱乐&#39;, &#39;轻小说&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;故事集&#39;], [&#39;专业用书&#39;, &#39;文学&#39;, &#39;新闻&#39;], [&#39;散文文学&#39;, &#39;小说&#39;, nan], [&#39;文学类&#39;, &#39;小说&#39;, &#39;专业用书&#39;], [&#39;小说&#39;, &#39;世界名著&#39;, nan], [&#39;小说&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;视频&#39;, &#39;作业&#39;, &#39;专业用书&#39;], [&#39;经典名著&#39;, &#39;专业用书&#39;, &#39;漫画&#39;], [&#39;小说&#39;, &#39;文学类&#39;, nan], [&#39;专业用书&#39;, nan, nan], [&#39;小说&#39;, &#39;专业用书&#39;, nan], [&#39;小说&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;文学类&#39;, &#39;专业相关&#39;, &#39;科普书籍&#39;], [&#39;文学类&#39;, &#39;名著类&#39;, &#39;专业相关类&#39;], [&#39;专业相关&#39;, &#39;青春文学&#39;, &#39;社科类&#39;], [&#39;小说&#39;, &#39;青春文学&#39;, &#39;专业类&#39;], [&#39;专业相关&#39;, &#39;科普类&#39;, &#39;名著&#39;], [&#39;专业用书&#39;, &#39;青春文学&#39;, &#39;小说&#39;], [&#39;散文文学&#39;, &#39;专业相关&#39;, &#39;名著&#39;], [&#39;小说阅读&#39;, &#39;专业书籍&#39;, nan], [&#39;科普类&#39;, &#39;专业相关&#39;, nan], [&#39;专业书籍&#39;, &#39;娱乐消遣类&#39;, nan], [&#39;小说&#39;, nan, nan], [&#39;小说&#39;, &#39;文学类&#39;, &#39;娱乐消遣&#39;]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> item_list:  </span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(item):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="built_in">float</span>:</span><br><span class="line">            item.pop(i)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> item_list:  </span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(item):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="built_in">float</span>:</span><br><span class="line">            item.pop(i)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> item_list:  </span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(item):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="built_in">float</span>:</span><br><span class="line">            item.pop(i)</span><br><span class="line">item_list</span><br></pre></td></tr></table></figure><pre><code>[[&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;科普读物&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;], [&#39;文学类&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;科普读物&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;科普读物&#39;, &#39;应用技术类&#39;, &#39;娱乐消遣类&#39;], [&#39;应用技术类&#39;, &#39;科普读物&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;应用技术类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;杂志类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;科普读物&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;应用技术类&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;应用技术类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;科普读物&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣&#39;, &#39;专业用书&#39;], [&#39;文学类&#39;, &#39;心理学类&#39;, &#39;娱乐消遣&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;文学书&#39;, &#39;心理学类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣&#39;, &#39;科普类&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;哲学类&#39;, &#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;], [&#39;科幻类&#39;, &#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;娱乐消遣&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类&#39;, &#39;专业相关类&#39;, &#39;新闻类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学名著&#39;, &#39;军事类&#39;], [&#39;专业用书&#39;, &#39;娱乐&#39;, &#39;文学名著&#39;], [&#39;国内外经典小说&#39;, &#39;科普类&#39;, &#39;名著&#39;], [&#39;专业用书&#39;, &#39;娱乐&#39;], [&#39;专业用书&#39;, &#39;文学&#39;], [&#39;专业用书&#39;, &#39;娱乐&#39;, &#39;轻小说&#39;], [&#39;文学类&#39;, &#39;专业用书&#39;, &#39;故事集&#39;], [&#39;专业用书&#39;, &#39;文学&#39;, &#39;新闻&#39;], [&#39;散文文学&#39;, &#39;小说&#39;], [&#39;文学类&#39;, &#39;小说&#39;, &#39;专业用书&#39;], [&#39;小说&#39;, &#39;世界名著&#39;], [&#39;小说&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;视频&#39;, &#39;作业&#39;, &#39;专业用书&#39;], [&#39;经典名著&#39;, &#39;专业用书&#39;, &#39;漫画&#39;], [&#39;小说&#39;, &#39;文学类&#39;], [&#39;专业用书&#39;], [&#39;小说&#39;, &#39;专业用书&#39;], [&#39;小说&#39;, &#39;文学类&#39;, &#39;专业用书&#39;], [&#39;文学类&#39;, &#39;专业相关&#39;, &#39;科普书籍&#39;], [&#39;文学类&#39;, &#39;名著类&#39;, &#39;专业相关类&#39;], [&#39;专业相关&#39;, &#39;青春文学&#39;, &#39;社科类&#39;], [&#39;小说&#39;, &#39;青春文学&#39;, &#39;专业类&#39;], [&#39;专业相关&#39;, &#39;科普类&#39;, &#39;名著&#39;], [&#39;专业用书&#39;, &#39;青春文学&#39;, &#39;小说&#39;], [&#39;散文文学&#39;, &#39;专业相关&#39;, &#39;名著&#39;], [&#39;小说阅读&#39;, &#39;专业书籍&#39;], [&#39;科普类&#39;, &#39;专业相关&#39;], [&#39;专业书籍&#39;, &#39;娱乐消遣类&#39;], [&#39;小说&#39;], [&#39;小说&#39;, &#39;文学类&#39;, &#39;娱乐消遣&#39;]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">&#x27;娱乐&#x27;</span>: <span class="string">&quot;娱乐消遣类&quot;</span>,</span><br><span class="line">      <span class="string">&quot;文学&quot;</span>: <span class="string">&quot;文学类读物&quot;</span>,</span><br><span class="line">      <span class="string">&quot;科普&quot;</span>: <span class="string">&quot;科普读物&quot;</span>,</span><br><span class="line">      <span class="string">&quot;技术&quot;</span>: <span class="string">&quot;应用技术类&quot;</span>,</span><br><span class="line">      <span class="string">&quot;应用&quot;</span>: <span class="string">&quot;应用技术类&quot;</span>,</span><br><span class="line">      <span class="string">&quot;经典&quot;</span>:<span class="string">&quot;经典名著&quot;</span>,</span><br><span class="line">       <span class="string">&quot;名著&quot;</span>:<span class="string">&quot;经典名著&quot;</span>,</span><br><span class="line">      <span class="string">&quot;小说&quot;</span>: <span class="string">&quot;小说类&quot;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> item_list:</span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(item):</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> dic.keys():</span><br><span class="line">            <span class="keyword">if</span> key <span class="keyword">in</span> v:</span><br><span class="line">                item[i] = dic[key]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">item_list</span><br></pre></td></tr></table></figure><pre><code>[[&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;科普读物&#39;, &#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;科普读物&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;科普读物&#39;, &#39;应用技术类&#39;, &#39;娱乐消遣类&#39;], [&#39;应用技术类&#39;, &#39;科普读物&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;应用技术类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;杂志类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;应用技术类&#39;, &#39;文学类读物&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;应用技术类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;科普读物&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;文学类读物&#39;, &#39;心理学类&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;心理学类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;, &#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;哲学类&#39;, &#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;], [&#39;科幻类&#39;, &#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;, &#39;专业相关类&#39;, &#39;新闻类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;, &#39;军事类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;经典名著&#39;, &#39;科普读物&#39;, &#39;经典名著&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;小说类&#39;], [&#39;文学类读物&#39;, &#39;专业用书&#39;, &#39;故事集&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;新闻&#39;], [&#39;文学类读物&#39;, &#39;小说类&#39;], [&#39;文学类读物&#39;, &#39;小说类&#39;, &#39;专业用书&#39;], [&#39;小说类&#39;, &#39;经典名著&#39;], [&#39;小说类&#39;, &#39;文学类读物&#39;, &#39;专业用书&#39;], [&#39;视频&#39;, &#39;作业&#39;, &#39;专业用书&#39;], [&#39;经典名著&#39;, &#39;专业用书&#39;, &#39;漫画&#39;], [&#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;], [&#39;小说类&#39;, &#39;专业用书&#39;], [&#39;小说类&#39;, &#39;文学类读物&#39;, &#39;专业用书&#39;], [&#39;文学类读物&#39;, &#39;专业相关&#39;, &#39;科普读物&#39;], [&#39;文学类读物&#39;, &#39;经典名著&#39;, &#39;专业相关类&#39;], [&#39;专业相关&#39;, &#39;文学类读物&#39;, &#39;社科类&#39;], [&#39;小说类&#39;, &#39;文学类读物&#39;, &#39;专业类&#39;], [&#39;专业相关&#39;, &#39;科普读物&#39;, &#39;经典名著&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;小说类&#39;], [&#39;文学类读物&#39;, &#39;专业相关&#39;, &#39;经典名著&#39;], [&#39;小说类&#39;, &#39;专业书籍&#39;], [&#39;科普读物&#39;, &#39;专业相关&#39;], [&#39;专业书籍&#39;, &#39;娱乐消遣类&#39;], [&#39;小说类&#39;], [&#39;小说类&#39;, &#39;文学类读物&#39;, &#39;娱乐消遣类&#39;]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(item_list)):</span><br><span class="line">    item_list[i] = <span class="built_in">sorted</span>(item_list[i])</span><br><span class="line">item_list</span><br></pre></td></tr></table></figure><pre><code>[[&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;应用技术类&#39;], [&#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;应用技术类&#39;, &#39;科普读物&#39;], [&#39;应用技术类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;应用技术类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;杂志类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;应用技术类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;应用技术类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;心理学类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;心理学类&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;科普读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;哲学类&#39;, &#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;], [&#39;娱乐消遣类&#39;, &#39;娱乐消遣类&#39;, &#39;科幻类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业相关类&#39;, &#39;文学类读物&#39;, &#39;新闻类&#39;], [&#39;军事类&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;文学类读物&#39;], [&#39;科普读物&#39;, &#39;经典名著&#39;, &#39;经典名著&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;娱乐消遣类&#39;, &#39;小说类&#39;], [&#39;专业用书&#39;, &#39;故事集&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;文学类读物&#39;, &#39;新闻&#39;], [&#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;小说类&#39;, &#39;经典名著&#39;], [&#39;专业用书&#39;, &#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;, &#39;作业&#39;, &#39;视频&#39;], [&#39;专业用书&#39;, &#39;漫画&#39;, &#39;经典名著&#39;], [&#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;专业用书&#39;], [&#39;专业用书&#39;, &#39;小说类&#39;], [&#39;专业用书&#39;, &#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;专业相关&#39;, &#39;文学类读物&#39;, &#39;科普读物&#39;], [&#39;专业相关类&#39;, &#39;文学类读物&#39;, &#39;经典名著&#39;], [&#39;专业相关&#39;, &#39;文学类读物&#39;, &#39;社科类&#39;], [&#39;专业类&#39;, &#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;专业相关&#39;, &#39;科普读物&#39;, &#39;经典名著&#39;], [&#39;专业用书&#39;, &#39;小说类&#39;, &#39;文学类读物&#39;], [&#39;专业相关&#39;, &#39;文学类读物&#39;, &#39;经典名著&#39;], [&#39;专业书籍&#39;, &#39;小说类&#39;], [&#39;专业相关&#39;, &#39;科普读物&#39;], [&#39;专业书籍&#39;, &#39;娱乐消遣类&#39;], [&#39;小说类&#39;], [&#39;娱乐消遣类&#39;, &#39;小说类&#39;, &#39;文学类读物&#39;]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">te = TransactionEncoder()</span><br><span class="line">df_tf = te.fit_transform(item_list)</span><br><span class="line">df3 = pd.DataFrame(df_tf,columns=te.columns_)</span><br><span class="line">df3</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>专业书籍</th>      <th>专业用书</th>      <th>专业相关</th>      <th>专业相关类</th>      <th>专业类</th>      <th>作业</th>      <th>军事类</th>      <th>哲学类</th>      <th>娱乐消遣类</th>      <th>小说类</th>      <th>...</th>      <th>文学类读物</th>      <th>新闻</th>      <th>新闻类</th>      <th>杂志类</th>      <th>漫画</th>      <th>社科类</th>      <th>科幻类</th>      <th>科普读物</th>      <th>经典名著</th>      <th>视频</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>1</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>2</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>3</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>4</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>125</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>126</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>127</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>128</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>True</td>      <td>...</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>  </tbody></table><p>129 rows × 23 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mlxtend.frequent_patterns <span class="keyword">import</span> apriori</span><br><span class="line"></span><br><span class="line"><span class="comment"># use_colnames=True表示使用元素名字，默认的False使用列名代表元素, 设置最小支持度min_support</span></span><br><span class="line">frequent_itemsets = apriori(df3, min_support=<span class="number">0.05</span>, use_colnames=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line">frequent_itemsets.sort_values(by=<span class="string">&#x27;support&#x27;</span>, ascending=<span class="literal">False</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 选择2频繁项集</span></span><br><span class="line"><span class="built_in">print</span>(frequent_itemsets[frequent_itemsets.itemsets.apply(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x)) == <span class="number">2</span>])</span><br></pre></td></tr></table></figure><pre><code>     support        itemsets6   0.426357   (专业用书, 娱乐消遣类)7   0.317829   (文学类读物, 专业用书)9   0.294574  (文学类读物, 娱乐消遣类)10  0.085271   (娱乐消遣类, 科普读物)8   0.069767    (专业用书, 科普读物)12  0.069767   (文学类读物, 科普读物)11  0.062016    (文学类读物, 小说类)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frequent_itemsets</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>support</th>      <th>itemsets</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>0.643411</td>      <td>(专业用书)</td>    </tr>    <tr>      <td>1</td>      <td>0.643411</td>      <td>(娱乐消遣类)</td>    </tr>    <tr>      <td>4</td>      <td>0.527132</td>      <td>(文学类读物)</td>    </tr>    <tr>      <td>6</td>      <td>0.426357</td>      <td>(专业用书, 娱乐消遣类)</td>    </tr>    <tr>      <td>7</td>      <td>0.317829</td>      <td>(文学类读物, 专业用书)</td>    </tr>    <tr>      <td>9</td>      <td>0.294574</td>      <td>(文学类读物, 娱乐消遣类)</td>    </tr>    <tr>      <td>13</td>      <td>0.170543</td>      <td>(专业用书, 文学类读物, 娱乐消遣类)</td>    </tr>    <tr>      <td>5</td>      <td>0.162791</td>      <td>(科普读物)</td>    </tr>    <tr>      <td>2</td>      <td>0.100775</td>      <td>(小说类)</td>    </tr>    <tr>      <td>10</td>      <td>0.085271</td>      <td>(娱乐消遣类, 科普读物)</td>    </tr>    <tr>      <td>8</td>      <td>0.069767</td>      <td>(专业用书, 科普读物)</td>    </tr>    <tr>      <td>12</td>      <td>0.069767</td>      <td>(文学类读物, 科普读物)</td>    </tr>    <tr>      <td>11</td>      <td>0.062016</td>      <td>(文学类读物, 小说类)</td>    </tr>    <tr>      <td>3</td>      <td>0.054264</td>      <td>(应用技术类)</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mlxtend.frequent_patterns <span class="keyword">import</span> association_rules</span><br><span class="line"> </span><br><span class="line"><span class="comment"># metric可以有很多的度量选项，返回的表列名都可以作为参数</span></span><br><span class="line">association_rule = association_rules(frequent_itemsets,metric=<span class="string">&#x27;confidence&#x27;</span>,min_threshold=<span class="number">0.1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#关联规则可以提升度排序</span></span><br><span class="line">association_rule.sort_values(by=<span class="string">&#x27;confidence&#x27;</span>,ascending=<span class="literal">False</span>,inplace=<span class="literal">True</span>)    </span><br><span class="line">association_rule</span><br><span class="line"><span class="comment"># 规则是：antecedents-&gt;consequents</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>antecedents</th>      <th>consequents</th>      <th>antecedent support</th>      <th>consequent support</th>      <th>support</th>      <th>confidence</th>      <th>lift</th>      <th>leverage</th>      <th>conviction</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>(专业用书)</td>      <td>(娱乐消遣类)</td>      <td>0.643411</td>      <td>0.643411</td>      <td>0.426357</td>      <td>0.662651</td>      <td>1.029903</td>      <td>0.012379</td>      <td>1.057032</td>    </tr>    <tr>      <td>1</td>      <td>(娱乐消遣类)</td>      <td>(专业用书)</td>      <td>0.643411</td>      <td>0.643411</td>      <td>0.426357</td>      <td>0.662651</td>      <td>1.029903</td>      <td>0.012379</td>      <td>1.057032</td>    </tr>    <tr>      <td>19</td>      <td>(小说类)</td>      <td>(文学类读物)</td>      <td>0.100775</td>      <td>0.527132</td>      <td>0.062016</td>      <td>0.615385</td>      <td>1.167421</td>      <td>0.008894</td>      <td>1.229457</td>    </tr>    <tr>      <td>2</td>      <td>(文学类读物)</td>      <td>(专业用书)</td>      <td>0.527132</td>      <td>0.643411</td>      <td>0.317829</td>      <td>0.602941</td>      <td>0.937101</td>      <td>-0.021333</td>      <td>0.898076</td>    </tr>    <tr>      <td>8</td>      <td>(文学类读物, 娱乐消遣类)</td>      <td>(专业用书)</td>      <td>0.294574</td>      <td>0.643411</td>      <td>0.170543</td>      <td>0.578947</td>      <td>0.899810</td>      <td>-0.018989</td>      <td>0.846899</td>    </tr>    <tr>      <td>4</td>      <td>(文学类读物)</td>      <td>(娱乐消遣类)</td>      <td>0.527132</td>      <td>0.643411</td>      <td>0.294574</td>      <td>0.558824</td>      <td>0.868533</td>      <td>-0.044589</td>      <td>0.808269</td>    </tr>    <tr>      <td>6</td>      <td>(文学类读物, 专业用书)</td>      <td>(娱乐消遣类)</td>      <td>0.317829</td>      <td>0.643411</td>      <td>0.170543</td>      <td>0.536585</td>      <td>0.833970</td>      <td>-0.033952</td>      <td>0.769482</td>    </tr>    <tr>      <td>13</td>      <td>(科普读物)</td>      <td>(娱乐消遣类)</td>      <td>0.162791</td>      <td>0.643411</td>      <td>0.085271</td>      <td>0.523810</td>      <td>0.814114</td>      <td>-0.019470</td>      <td>0.748837</td>    </tr>    <tr>      <td>3</td>      <td>(专业用书)</td>      <td>(文学类读物)</td>      <td>0.643411</td>      <td>0.527132</td>      <td>0.317829</td>      <td>0.493976</td>      <td>0.937101</td>      <td>-0.021333</td>      <td>0.934478</td>    </tr>    <tr>      <td>5</td>      <td>(娱乐消遣类)</td>      <td>(文学类读物)</td>      <td>0.643411</td>      <td>0.527132</td>      <td>0.294574</td>      <td>0.457831</td>      <td>0.868533</td>      <td>-0.044589</td>      <td>0.872179</td>    </tr>    <tr>      <td>17</td>      <td>(科普读物)</td>      <td>(文学类读物)</td>      <td>0.162791</td>      <td>0.527132</td>      <td>0.069767</td>      <td>0.428571</td>      <td>0.813025</td>      <td>-0.016045</td>      <td>0.827519</td>    </tr>    <tr>      <td>15</td>      <td>(科普读物)</td>      <td>(专业用书)</td>      <td>0.162791</td>      <td>0.643411</td>      <td>0.069767</td>      <td>0.428571</td>      <td>0.666093</td>      <td>-0.034974</td>      <td>0.624031</td>    </tr>    <tr>      <td>7</td>      <td>(娱乐消遣类, 专业用书)</td>      <td>(文学类读物)</td>      <td>0.426357</td>      <td>0.527132</td>      <td>0.170543</td>      <td>0.400000</td>      <td>0.758824</td>      <td>-0.054203</td>      <td>0.788114</td>    </tr>    <tr>      <td>10</td>      <td>(文学类读物)</td>      <td>(娱乐消遣类, 专业用书)</td>      <td>0.527132</td>      <td>0.426357</td>      <td>0.170543</td>      <td>0.323529</td>      <td>0.758824</td>      <td>-0.054203</td>      <td>0.847995</td>    </tr>    <tr>      <td>9</td>      <td>(专业用书)</td>      <td>(文学类读物, 娱乐消遣类)</td>      <td>0.643411</td>      <td>0.294574</td>      <td>0.170543</td>      <td>0.265060</td>      <td>0.899810</td>      <td>-0.018989</td>      <td>0.959842</td>    </tr>    <tr>      <td>11</td>      <td>(娱乐消遣类)</td>      <td>(文学类读物, 专业用书)</td>      <td>0.643411</td>      <td>0.317829</td>      <td>0.170543</td>      <td>0.265060</td>      <td>0.833970</td>      <td>-0.033952</td>      <td>0.928199</td>    </tr>    <tr>      <td>12</td>      <td>(娱乐消遣类)</td>      <td>(科普读物)</td>      <td>0.643411</td>      <td>0.162791</td>      <td>0.085271</td>      <td>0.132530</td>      <td>0.814114</td>      <td>-0.019470</td>      <td>0.965116</td>    </tr>    <tr>      <td>16</td>      <td>(文学类读物)</td>      <td>(科普读物)</td>      <td>0.527132</td>      <td>0.162791</td>      <td>0.069767</td>      <td>0.132353</td>      <td>0.813025</td>      <td>-0.016045</td>      <td>0.964919</td>    </tr>    <tr>      <td>18</td>      <td>(文学类读物)</td>      <td>(小说类)</td>      <td>0.527132</td>      <td>0.100775</td>      <td>0.062016</td>      <td>0.117647</td>      <td>1.167421</td>      <td>0.008894</td>      <td>1.019121</td>    </tr>    <tr>      <td>14</td>      <td>(专业用书)</td>      <td>(科普读物)</td>      <td>0.643411</td>      <td>0.162791</td>      <td>0.069767</td>      <td>0.108434</td>      <td>0.666093</td>      <td>-0.034974</td>      <td>0.939032</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>每周平均课外阅读时间</th>      <th>种类1</th>      <th>种类2</th>      <th>种类3</th>      <th>性别</th>      <th>是否有早读习惯</th>      <th>大英1</th>      <th>视听说1</th>      <th>大英2</th>      <th>视听说2</th>      <th>...</th>      <th>市</th>      <th>城市or农村</th>      <th>大学期间是否谈恋爱</th>      <th>大一大二加权平均分</th>      <th>每周游戏时间</th>      <th>是否通过四级</th>      <th>大学英语成绩</th>      <th>高考数学成绩（100分制）</th>      <th>数学成绩(样本)</th>      <th>计算机成绩(样本)</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>70.000000</td>      <td>67.000000</td>      <td>74.000000</td>      <td>65.0</td>      <td>...</td>      <td>呼和浩特市</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>4.0</td>      <td>1</td>      <td>70.948785</td>      <td>75</td>      <td>71.000000</td>      <td>87.000000</td>    </tr>    <tr>      <td>1</td>      <td>1-7h</td>      <td>专业用书</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>67.000000</td>      <td>77.000000</td>      <td>69.000000</td>      <td>76.0</td>      <td>...</td>      <td>赣州市</td>      <td>城市</td>      <td>是</td>      <td>75.0</td>      <td>10.5</td>      <td>0</td>      <td>72.500000</td>      <td>91</td>      <td>85.250000</td>      <td>71.000000</td>    </tr>    <tr>      <td>2</td>      <td>1-7h</td>      <td>娱乐消遣类</td>      <td>科普读物</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>68.000000</td>      <td>79.000000</td>      <td>67.000000</td>      <td>75.0</td>      <td>...</td>      <td>上饶市</td>      <td>城市</td>      <td>否</td>      <td>74.0</td>      <td>10.5</td>      <td>1</td>      <td>62.250000</td>      <td>85</td>      <td>60.000000</td>      <td>73.000000</td>    </tr>    <tr>      <td>3</td>      <td>1-7h</td>      <td>专业用书</td>      <td>文学类</td>      <td>娱乐消遣类</td>      <td>0</td>      <td>否</td>      <td>77.000000</td>      <td>74.000000</td>      <td>66.000000</td>      <td>69.0</td>      <td>...</td>      <td>宜春市</td>      <td>农村</td>      <td>否</td>      <td>80.0</td>      <td>1.0</td>      <td>0</td>      <td>74.448785</td>      <td>81</td>      <td>79.000000</td>      <td>84.000000</td>    </tr>    <tr>      <td>4</td>      <td>1-7h</td>      <td>专业用书</td>      <td>NaN</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>76.000000</td>      <td>81.000000</td>      <td>85.000000</td>      <td>80.0</td>      <td>...</td>      <td>金华市</td>      <td>农村</td>      <td>是</td>      <td>86.6</td>      <td>1.0</td>      <td>1</td>      <td>79.305556</td>      <td>80</td>      <td>86.000000</td>      <td>82.117647</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>1～7h</td>      <td>小说阅读</td>      <td>专业书籍</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>76.000000</td>      <td>72.000000</td>      <td>73.000000</td>      <td>72.0</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1</td>      <td>75.049918</td>      <td>75</td>      <td>76.596281</td>      <td>81.351443</td>    </tr>    <tr>      <td>125</td>      <td>1~7h</td>      <td>科普类</td>      <td>专业相关</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>80.000000</td>      <td>76.000000</td>      <td>72.000000</td>      <td>80.0</td>      <td>...</td>      <td>湘潭</td>      <td>城市</td>      <td>是</td>      <td>85.5</td>      <td>24.0</td>      <td>1</td>      <td>76.924918</td>      <td>83</td>      <td>81.500000</td>      <td>80.000000</td>    </tr>    <tr>      <td>126</td>      <td>24h以下</td>      <td>专业书籍</td>      <td>娱乐消遣类</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>76.573171</td>      <td>77.350427</td>      <td>76.819672</td>      <td>78.0</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1</td>      <td>77.017827</td>      <td>75</td>      <td>76.596281</td>      <td>81.351443</td>    </tr>    <tr>      <td>127</td>      <td>2－5h</td>      <td>小说</td>      <td>NaN</td>      <td>NaN</td>      <td>1</td>      <td>否</td>      <td>72.000000</td>      <td>77.350427</td>      <td>76.819672</td>      <td>78.0</td>      <td>...</td>      <td>邵阳</td>      <td>农村</td>      <td>否</td>      <td>84.6</td>      <td>NaN</td>      <td>0</td>      <td>76.446180</td>      <td>82</td>      <td>87.000000</td>      <td>80.500000</td>    </tr>    <tr>      <td>128</td>      <td>1-7h</td>      <td>小说</td>      <td>文学类</td>      <td>娱乐消遣</td>      <td>1</td>      <td>否</td>      <td>80.000000</td>      <td>77.000000</td>      <td>82.000000</td>      <td>75.0</td>      <td>...</td>      <td>衡阳</td>      <td>城市</td>      <td>否</td>      <td>80.0</td>      <td>4.0</td>      <td>1</td>      <td>76.625000</td>      <td>80</td>      <td>85.000000</td>      <td>82.500000</td>    </tr>  </tbody></table><p>129 rows × 32 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df4=data.loc[:,[<span class="string">&quot;是否有早读习惯&quot;</span>,<span class="string">&quot;大学期间是否谈恋爱&quot;</span>]]</span><br><span class="line">df4</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>是否有早读习惯</th>      <th>大学期间是否谈恋爱</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>否</td>      <td>否</td>    </tr>    <tr>      <td>1</td>      <td>否</td>      <td>是</td>    </tr>    <tr>      <td>2</td>      <td>否</td>      <td>否</td>    </tr>    <tr>      <td>3</td>      <td>否</td>      <td>否</td>    </tr>    <tr>      <td>4</td>      <td>否</td>      <td>是</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>否</td>      <td>NaN</td>    </tr>    <tr>      <td>125</td>      <td>否</td>      <td>是</td>    </tr>    <tr>      <td>126</td>      <td>否</td>      <td>NaN</td>    </tr>    <tr>      <td>127</td>      <td>否</td>      <td>否</td>    </tr>    <tr>      <td>128</td>      <td>否</td>      <td>否</td>    </tr>  </tbody></table><p>129 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">set_BoolValue</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&#x27;否&#x27;</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">df4[<span class="string">&#x27;是否有早读习惯&#x27;</span>] = data[<span class="string">&#x27;是否有早读习惯&#x27;</span>].apply(set_BoolValue)</span><br><span class="line">df4[<span class="string">&#x27;大学期间是否谈恋爱&#x27;</span>]=data[<span class="string">&#x27;大学期间是否谈恋爱&#x27;</span>].apply(set_BoolValue)</span><br><span class="line">df4</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>是否有早读习惯</th>      <th>大学期间是否谈恋爱</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>1</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>2</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>3</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>4</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>125</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>126</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>127</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>128</td>      <td>False</td>      <td>False</td>    </tr>  </tbody></table><p>129 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">results=pd.concat([df3,df4],axis=<span class="number">1</span>)</span><br><span class="line">results</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>专业书籍</th>      <th>专业用书</th>      <th>专业相关</th>      <th>专业相关类</th>      <th>专业类</th>      <th>作业</th>      <th>军事类</th>      <th>哲学类</th>      <th>娱乐消遣类</th>      <th>小说类</th>      <th>...</th>      <th>新闻类</th>      <th>杂志类</th>      <th>漫画</th>      <th>社科类</th>      <th>科幻类</th>      <th>科普读物</th>      <th>经典名著</th>      <th>视频</th>      <th>是否有早读习惯</th>      <th>大学期间是否谈恋爱</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>1</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>2</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>3</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>4</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>124</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>125</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>126</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <td>127</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <td>128</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>True</td>      <td>...</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>  </tbody></table><p>129 rows × 25 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mlxtend.frequent_patterns <span class="keyword">import</span> apriori</span><br><span class="line"></span><br><span class="line"><span class="comment"># use_colnames=True表示使用元素名字，默认的False使用列名代表元素, 设置最小支持度min_support</span></span><br><span class="line">frequent_itemsets = apriori(results, min_support=<span class="number">0.05</span>, use_colnames=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line">frequent_itemsets.sort_values(by=<span class="string">&#x27;support&#x27;</span>, ascending=<span class="literal">False</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 选择2频繁项集</span></span><br><span class="line"><span class="built_in">print</span>(frequent_itemsets[frequent_itemsets.itemsets.apply(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x)) == <span class="number">2</span>])</span><br></pre></td></tr></table></figure><pre><code>     support            itemsets7   0.426357       (专业用书, 娱乐消遣类)8   0.317829       (文学类读物, 专业用书)11  0.294574      (文学类读物, 娱乐消遣类)10  0.217054   (大学期间是否谈恋爱, 专业用书)13  0.201550  (大学期间是否谈恋爱, 娱乐消遣类)16  0.170543  (大学期间是否谈恋爱, 文学类读物)12  0.085271       (娱乐消遣类, 科普读物)9   0.069767        (专业用书, 科普读物)15  0.069767       (文学类读物, 科普读物)14  0.062016        (文学类读物, 小说类)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关联规则挖掘Aprior算法</title>
    <link href="https://zxb6.github.io/2022/11/09/%E5%85%B3%E8%81%94%E8%A7%84%E5%88%99%E6%8C%96%E6%8E%98Aprior%E7%AE%97%E6%B3%95/"/>
    <id>https://zxb6.github.io/2022/11/09/%E5%85%B3%E8%81%94%E8%A7%84%E5%88%99%E6%8C%96%E6%8E%98Aprior%E7%AE%97%E6%B3%95/</id>
    <published>2022-11-09T07:38:16.000Z</published>
    <updated>2022-11-09T07:59:37.106Z</updated>
    
    <content type="html"><![CDATA[<p>在本案例中，我们根据教材中介绍的关联规则算法，寻找潜在的关联规则。APRIOR算法是一种发现频繁项集的基本算法，接下来，我们将使用Python语言详细实现APRIOR的过程。</p><p>在具体编写算法的过程中，我们使用一个简单的toy data数据集Data，来验证算法的正确性。</p><p>1 APRIOR算法实现 根据APRIOR算法的步骤，创建候选 C1 集，并由此创建频繁 L1 项集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Data = &#123;<span class="string">&#x27;user1&#x27;</span>:[<span class="string">&#x27;I1&#x27;</span>,<span class="string">&#x27;I2&#x27;</span>,<span class="string">&#x27;I5&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user2&#x27;</span>:[<span class="string">&#x27;I2&#x27;</span>,<span class="string">&#x27;I4&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user3&#x27;</span>:[<span class="string">&#x27;I2&#x27;</span>,<span class="string">&#x27;I3&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user4&#x27;</span>:[<span class="string">&#x27;I1&#x27;</span>,<span class="string">&#x27;I2&#x27;</span>,<span class="string">&#x27;I4&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user5&#x27;</span>:[<span class="string">&#x27;I1&#x27;</span>,<span class="string">&#x27;I3&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user6&#x27;</span>:[<span class="string">&#x27;I2&#x27;</span>,<span class="string">&#x27;I3&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user7&#x27;</span>:[<span class="string">&#x27;I1&#x27;</span>,<span class="string">&#x27;I3&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user8&#x27;</span>:[<span class="string">&#x27;I1&#x27;</span>,<span class="string">&#x27;I2&#x27;</span>,<span class="string">&#x27;I3&#x27;</span>,<span class="string">&#x27;I5&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;user9&#x27;</span>:[<span class="string">&#x27;I1&#x27;</span>,<span class="string">&#x27;I2&#x27;</span>,<span class="string">&#x27;I3&#x27;</span>]</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>我们首先对data进行变换，使用frozenset类型存储数据记录。</p><p>在Python中，集合类型set是可变的，不存在哈希值。而frozenset是冻结的集合类型，不可变，存在哈希值。因此，使用frozenset类型存储的频繁项，可以作为字典的key保存下来，有利于后续创建频繁项集集合(key为频繁项，value为支持度）。更多的数据类型如OrderedDict，namedtuple等，可以参考Python的collection模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;v: <span class="built_in">frozenset</span>(Data[v]) <span class="keyword">for</span> v <span class="keyword">in</span> Data&#125;</span><br><span class="line">data</span><br></pre></td></tr></table></figure><pre><code>&#123;&#39;user1&#39;: frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;, &#39;I5&#39;&#125;), &#39;user2&#39;: frozenset(&#123;&#39;I2&#39;, &#39;I4&#39;&#125;), &#39;user3&#39;: frozenset(&#123;&#39;I2&#39;, &#39;I3&#39;&#125;), &#39;user4&#39;: frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;, &#39;I4&#39;&#125;), &#39;user5&#39;: frozenset(&#123;&#39;I1&#39;, &#39;I3&#39;&#125;), &#39;user6&#39;: frozenset(&#123;&#39;I2&#39;, &#39;I3&#39;&#125;), &#39;user7&#39;: frozenset(&#123;&#39;I1&#39;, &#39;I3&#39;&#125;), &#39;user8&#39;: frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;, &#39;I3&#39;, &#39;I5&#39;&#125;), &#39;user9&#39;: frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;, &#39;I3&#39;&#125;)&#125;</code></pre><p>1.1 生成频繁1项集<br>由于频繁项的长度为1，我们可以通过统计data中各个元素出现的频次，直接生成频繁1项集。项集使用Python中的字典类型进行存储，key表示频繁项，value表示对应的支持度。最小支持度为2。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">freq_1 = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> data[item]:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">frozenset</span>([record]) <span class="keyword">in</span> freq_1:</span><br><span class="line">            freq_1[<span class="built_in">frozenset</span>([record])] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            freq_1[<span class="built_in">frozenset</span>([record])]  = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">freq_1 = &#123;v:freq_1[v] <span class="keyword">for</span> v <span class="keyword">in</span> freq_1 <span class="keyword">if</span> freq_1[v] &gt;= <span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">freq_1</span><br></pre></td></tr></table></figure><pre><code>&#123;frozenset(&#123;&#39;I5&#39;&#125;): 2, frozenset(&#123;&#39;I1&#39;&#125;): 6, frozenset(&#123;&#39;I2&#39;&#125;): 7, frozenset(&#123;&#39;I4&#39;&#125;): 2, frozenset(&#123;&#39;I3&#39;&#125;): 6&#125;</code></pre><p>1.2 生成频繁k项集<br>从k&gt;&#x3D;2 开始，根据得到的频繁(k−1)项集，生成频繁k项集。<br>这个过程由函数getFrequentItemSetWithSupport()负责，返回k频繁项集。具体来说，分为三步：</p><p>第一步：连接步生成候选集Ck<br>第二步：剪枝步生成频繁k项集<br>第三步：选择符合设定条件（满足最小支持度）的频繁项，生成最终结果<br>在连接步中，我们将频繁(k−1) 项集与自身连结，生成k项候选集candidate_items。</p><p>在剪枝步中，我们使用先验性质对候选项集进行过滤，减少运算量。这个性质就是：</p><p>频繁项集的所有非空子集必然是频繁项集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">getFrequentItemSetWithSupport函数用来寻找频繁k项集</span></span><br><span class="line"><span class="string">输入参数：</span></span><br><span class="line"><span class="string">frequent_k: 频繁k-1项集</span></span><br><span class="line"><span class="string">min_support：最小支持度</span></span><br><span class="line"><span class="string">item_list: 业务数据记录</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">返回参数：</span></span><br><span class="line"><span class="string">频繁k项集：&#123;频繁项：支持度，频繁项：支持度&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当k &gt;= 2时</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getFrequentItemSetWithSupport</span>(<span class="params">frequent_k, min_support, k, item_list</span>):</span><br><span class="line">    </span><br><span class="line">    items = frequent_k.keys()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#k项候选集</span></span><br><span class="line">    candidate_items = []</span><br><span class="line">    </span><br><span class="line">    current_k = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">### 连接步，生成候选集</span></span><br><span class="line">    candidate_items = [m.union(n) <span class="keyword">for</span> m <span class="keyword">in</span> items <span class="keyword">for</span> n <span class="keyword">in</span> items <span class="keyword">if</span> m != n <span class="keyword">and</span> <span class="built_in">len</span>(m.union(n)) == k]</span><br><span class="line"> </span><br><span class="line">    <span class="comment">### 剪枝步，剔除含有非频繁项子集的项集</span></span><br><span class="line">    final_candidate = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> candidate <span class="keyword">in</span> candidate_items:</span><br><span class="line">        </span><br><span class="line">        sub_items = getSubset(candidate, (k - <span class="number">1</span>))</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">any</span>([item &lt; candidate <span class="keyword">for</span> item <span class="keyword">in</span> sub_items]):  </span><br><span class="line">            </span><br><span class="line">            final_candidate.add(candidate)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">              </span><br><span class="line">    <span class="comment"># 遍历数据集data，对final_candidate中的元素进行统计，保留支持度大于最小阈值的频繁项</span></span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> item_list.items():</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> final_candidate:</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#数据记录record中含有频繁项item</span></span><br><span class="line">            <span class="keyword">if</span> item.issubset(record[<span class="number">1</span>]):     </span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> item <span class="keyword">in</span> current_k:</span><br><span class="line">                    current_k[item] += <span class="number">1</span>                </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    current_k[item] = <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;v: current_k[v] <span class="keyword">for</span> v <span class="keyword">in</span> current_k <span class="keyword">if</span> current_k[v] &gt;= min_support&#125;  </span><br></pre></td></tr></table></figure><p>在函数getFrequentItemSetWithSupport中，我们自定义两个函数getSubset,和getAllSubets，分别返回项集的k项子集，以及所有非空子集。</p><p>比如, 项集frozenset({‘I1’, ‘I2’, ‘I5’}), 它的2项子集应为：</p><p>frozenset({‘I1’, ‘I2’}) frozenset({‘I1’, ‘I5’}) frozenset({‘I2’, ‘I5’})</p><p>那么，我们使用以下代码，实现上述的功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getSubset</span>(<span class="params">item, k</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">import</span> itertools <span class="keyword">as</span> its</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">frozenset</span>(item) <span class="keyword">for</span> item <span class="keyword">in</span> its.combinations(item, k)]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">example1 = <span class="built_in">frozenset</span>(&#123;<span class="string">&#x27;I1&#x27;</span>, <span class="string">&#x27;I2&#x27;</span>, <span class="string">&#x27;I5&#x27;</span>&#125;)</span><br><span class="line">getSubset(example1, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>[frozenset(&#123;&#39;I1&#39;, &#39;I5&#39;&#125;), frozenset(&#123;&#39;I2&#39;, &#39;I5&#39;&#125;), frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)]</code></pre><p>当然，我们通过getAllSubsets()函数，找到它的所有非空真子集：</p><p>frozenset({‘I1’, ‘I2’}) frozenset({‘I1’, ‘I5’}) frozenset({‘I2’, ‘I5’}) frozenset({‘I1’}) frozenset({‘I2’}) frozenset({‘I5’})</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getAllSubsets</span>(<span class="params">item</span>):</span><br><span class="line">    </span><br><span class="line">    subsets = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(item) - <span class="number">1</span>):</span><br><span class="line">    </span><br><span class="line">        subsets.extend(getSubset(item, i + <span class="number">1</span>))</span><br><span class="line">                       </span><br><span class="line">    <span class="keyword">return</span> subsets</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getAllSubsets(example1)</span><br></pre></td></tr></table></figure><pre><code>[frozenset(&#123;&#39;I5&#39;&#125;), frozenset(&#123;&#39;I1&#39;&#125;), frozenset(&#123;&#39;I2&#39;&#125;), frozenset(&#123;&#39;I1&#39;, &#39;I5&#39;&#125;), frozenset(&#123;&#39;I2&#39;, &#39;I5&#39;&#125;), frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)]</code></pre><p>项集的子集可以通过排列组合来得到，我们可以调用itertools中的combinations函数来具体实现返回子集的功能。</p><p>至此，反复调用getFrequentItemSetWithSuppot(), 得到完整的频繁k项集集合，直到达到停止条件，集频繁k项集为空。</p><p>当数据记录的长度很长时，算法需要逐个检查频繁k项集是否为空；另外，我们在具体任务中寻找的频繁项长度也不会过长，因此</p><p>我们选择通过控制k的取值来获取指定的频繁k项集集合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">k = <span class="number">2</span></span><br><span class="line">final_itemsets= []</span><br><span class="line">final_itemsets.append(freq_1)</span><br><span class="line">min_support = <span class="number">2</span></span><br><span class="line">min_conf = <span class="number">0.6</span></span><br><span class="line"></span><br><span class="line">frequent_k_minus_1 = freq_1</span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#while frequent_k != &#123;&#125;:</span></span><br><span class="line"><span class="keyword">while</span> k &lt;= <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">print</span>(frequent_k_minus_1)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;&quot;</span>)</span><br><span class="line">    frequent_k = getFrequentItemSetWithSupport(frequent_k_minus_1, min_support, k, data)</span><br><span class="line">    final_itemsets.append(frequent_k)</span><br><span class="line">    frequent_k_minus_1 = frequent_k</span><br><span class="line">    k += <span class="number">1</span></span><br></pre></td></tr></table></figure><pre><code>&#123;frozenset(&#123;&#39;I5&#39;&#125;): 2, frozenset(&#123;&#39;I1&#39;&#125;): 6, frozenset(&#123;&#39;I2&#39;&#125;): 7, frozenset(&#123;&#39;I4&#39;&#125;): 2, frozenset(&#123;&#39;I3&#39;&#125;): 6&#125;&#123;frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;): 4, frozenset(&#123;&#39;I5&#39;, &#39;I1&#39;&#125;): 2, frozenset(&#123;&#39;I5&#39;, &#39;I2&#39;&#125;): 2, frozenset(&#123;&#39;I4&#39;, &#39;I2&#39;&#125;): 2, frozenset(&#123;&#39;I3&#39;, &#39;I2&#39;&#125;): 4, frozenset(&#123;&#39;I1&#39;, &#39;I3&#39;&#125;): 4&#125;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">final_itemsets</span><br></pre></td></tr></table></figure><pre><code>[&#123;frozenset(&#123;&#39;I5&#39;&#125;): 2,  frozenset(&#123;&#39;I1&#39;&#125;): 6,  frozenset(&#123;&#39;I2&#39;&#125;): 7,  frozenset(&#123;&#39;I4&#39;&#125;): 2,  frozenset(&#123;&#39;I3&#39;&#125;): 6&#125;, &#123;frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;): 4,  frozenset(&#123;&#39;I1&#39;, &#39;I5&#39;&#125;): 2,  frozenset(&#123;&#39;I2&#39;, &#39;I5&#39;&#125;): 2,  frozenset(&#123;&#39;I2&#39;, &#39;I4&#39;&#125;): 2,  frozenset(&#123;&#39;I2&#39;, &#39;I3&#39;&#125;): 4,  frozenset(&#123;&#39;I1&#39;, &#39;I3&#39;&#125;): 4&#125;, &#123;frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;, &#39;I5&#39;&#125;): 2, frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;, &#39;I3&#39;&#125;): 2&#125;]</code></pre><p>1.3 生成关联规则<br>生成频繁项集之后，我们可以直接得到同时满足最小支持度和最小置信度的强关联规则。例如，对于频繁项集{‘A’,’B’}来说，关联规则 A→B 的置信度如下所示： conf(A→B)&#x3D;support(A,B)&#x2F;support(A)</p><p>生成关联规则主要有以下几步：</p><p>对于频繁k项集中的每个元素value，调用getAllSubsets()函数得到value的所有非空子集<br>对于非空子集中的每个元素condition，找到除去condition的所有剩余元素conclusion_items<br>根据置信度公式，计算confidence<br>将所有满足条件(大于min_conf)的潜在关联规则[[condition，conclusoin_items], confidence]放入association_rules中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">association_rules = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item_set <span class="keyword">in</span> final_itemsets[<span class="number">1</span>:]:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> item_set:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&#x27;frequent item set: &#x27;</span>, value)</span><br><span class="line">        <span class="comment">#形如 if condition, then conclusion</span></span><br><span class="line">        <span class="keyword">for</span> condition <span class="keyword">in</span> getAllSubsets(value):</span><br><span class="line">            <span class="built_in">print</span> (<span class="string">&#x27;    condition: &#x27;</span>, condition)</span><br><span class="line">            conclusion_items = <span class="built_in">frozenset</span>(x <span class="keyword">for</span> x <span class="keyword">in</span> value <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> condition)</span><br><span class="line">            <span class="built_in">print</span> (<span class="string">&#x27;    conclusion: &#x27;</span>, conclusion_items)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(conclusion_items) &gt; <span class="number">0</span>:</span><br><span class="line">                    </span><br><span class="line">                confidence = <span class="built_in">float</span>(final_itemsets[<span class="built_in">len</span>(value) - <span class="number">1</span>][value])/final_itemsets[<span class="built_in">len</span>(condition) - <span class="number">1</span>][condition]</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;    confidence:&quot;</span>,confidence)</span><br><span class="line">                <span class="keyword">if</span> confidence &gt; min_conf:</span><br><span class="line">                        </span><br><span class="line">                    association_rules.append([[condition, conclusion_items],</span><br><span class="line">                                           confidence])</span><br><span class="line">                <span class="built_in">print</span> (<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>frequent item set:  frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)    condition:  frozenset(&#123;&#39;I1&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I2&#39;&#125;)    confidence: 0.6666666666666666    condition:  frozenset(&#123;&#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;&#125;)    confidence: 0.5714285714285714frequent item set:  frozenset(&#123;&#39;I5&#39;, &#39;I1&#39;&#125;)    condition:  frozenset(&#123;&#39;I5&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;&#125;)    confidence: 1.0    condition:  frozenset(&#123;&#39;I1&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I5&#39;&#125;)    confidence: 0.3333333333333333frequent item set:  frozenset(&#123;&#39;I5&#39;, &#39;I2&#39;&#125;)    condition:  frozenset(&#123;&#39;I5&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I2&#39;&#125;)    confidence: 1.0    condition:  frozenset(&#123;&#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I5&#39;&#125;)    confidence: 0.2857142857142857frequent item set:  frozenset(&#123;&#39;I4&#39;, &#39;I2&#39;&#125;)    condition:  frozenset(&#123;&#39;I4&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I2&#39;&#125;)    confidence: 1.0    condition:  frozenset(&#123;&#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I4&#39;&#125;)    confidence: 0.2857142857142857frequent item set:  frozenset(&#123;&#39;I3&#39;, &#39;I2&#39;&#125;)    condition:  frozenset(&#123;&#39;I3&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I2&#39;&#125;)    confidence: 0.6666666666666666    condition:  frozenset(&#123;&#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I3&#39;&#125;)    confidence: 0.5714285714285714frequent item set:  frozenset(&#123;&#39;I1&#39;, &#39;I3&#39;&#125;)    condition:  frozenset(&#123;&#39;I1&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I3&#39;&#125;)    confidence: 0.6666666666666666    condition:  frozenset(&#123;&#39;I3&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;&#125;)    confidence: 0.6666666666666666frequent item set:  frozenset(&#123;&#39;I5&#39;, &#39;I1&#39;, &#39;I2&#39;&#125;)    condition:  frozenset(&#123;&#39;I5&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)    confidence: 1.0    condition:  frozenset(&#123;&#39;I1&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I5&#39;, &#39;I2&#39;&#125;)    confidence: 0.3333333333333333    condition:  frozenset(&#123;&#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I5&#39;, &#39;I1&#39;&#125;)    confidence: 0.2857142857142857    condition:  frozenset(&#123;&#39;I5&#39;, &#39;I1&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I2&#39;&#125;)    confidence: 1.0    condition:  frozenset(&#123;&#39;I5&#39;, &#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;&#125;)    confidence: 1.0    condition:  frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I5&#39;&#125;)    confidence: 0.5frequent item set:  frozenset(&#123;&#39;I3&#39;, &#39;I1&#39;, &#39;I2&#39;&#125;)    condition:  frozenset(&#123;&#39;I3&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)    confidence: 0.3333333333333333    condition:  frozenset(&#123;&#39;I1&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I3&#39;, &#39;I2&#39;&#125;)    confidence: 0.3333333333333333    condition:  frozenset(&#123;&#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;, &#39;I3&#39;&#125;)    confidence: 0.2857142857142857    condition:  frozenset(&#123;&#39;I1&#39;, &#39;I3&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I2&#39;&#125;)    confidence: 0.5    condition:  frozenset(&#123;&#39;I3&#39;, &#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I1&#39;&#125;)    confidence: 0.5    condition:  frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)    conclusion:  frozenset(&#123;&#39;I3&#39;&#125;)    confidence: 0.5</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">association_rules</span><br></pre></td></tr></table></figure><pre><code>[[[frozenset(&#123;&#39;I1&#39;&#125;), frozenset(&#123;&#39;I2&#39;&#125;)], 0.6666666666666666], [[frozenset(&#123;&#39;I5&#39;&#125;), frozenset(&#123;&#39;I1&#39;&#125;)], 1.0], [[frozenset(&#123;&#39;I5&#39;&#125;), frozenset(&#123;&#39;I2&#39;&#125;)], 1.0], [[frozenset(&#123;&#39;I4&#39;&#125;), frozenset(&#123;&#39;I2&#39;&#125;)], 1.0], [[frozenset(&#123;&#39;I3&#39;&#125;), frozenset(&#123;&#39;I2&#39;&#125;)], 0.6666666666666666], [[frozenset(&#123;&#39;I1&#39;&#125;), frozenset(&#123;&#39;I3&#39;&#125;)], 0.6666666666666666], [[frozenset(&#123;&#39;I3&#39;&#125;), frozenset(&#123;&#39;I1&#39;&#125;)], 0.6666666666666666], [[frozenset(&#123;&#39;I5&#39;&#125;), frozenset(&#123;&#39;I1&#39;, &#39;I2&#39;&#125;)], 1.0], [[frozenset(&#123;&#39;I1&#39;, &#39;I5&#39;&#125;), frozenset(&#123;&#39;I2&#39;&#125;)], 1.0], [[frozenset(&#123;&#39;I2&#39;, &#39;I5&#39;&#125;), frozenset(&#123;&#39;I1&#39;&#125;)], 1.0]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在本案例中，我们根据教材中介绍的关联规则算法，寻找潜在的关联规则。APRIOR算法是一种发现频繁项集的基本算法，接下来，我们将使用Python语言详细实现APRIOR的过程。&lt;/p&gt;
&lt;p&gt;在具体编写算法的过程中，我们使用一个简单的toy data数据集Data，来验证算法</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Markdown Reference</title>
    <link href="https://zxb6.github.io/2022/10/05/2021-9-17%20Markdown%20Reference%20150800/"/>
    <id>https://zxb6.github.io/2022/10/05/2021-9-17%20Markdown%20Reference%20150800/</id>
    <published>2022-10-05T08:23:04.000Z</published>
    <updated>2022-10-20T09:50:13.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-For-Typora"><a href="#Markdown-For-Typora" class="headerlink" title="Markdown For Typora"></a>Markdown For Typora</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p><strong>Markdown</strong> is created by <a href="http://daringfireball.net/">Daring Fireball</a>; the original guideline is <a href="http://daringfireball.net/projects/markdown/syntax">here</a>. Its syntax, however, varies between different parsers or editors. <strong>Typora</strong> is using <a href="https://help.github.com/articles/github-flavored-markdown/">GitHub Flavored Markdown</a>.</p><p>[toc]</p><h2 id="Block-Elements"><a href="#Block-Elements" class="headerlink" title="Block Elements"></a>Block Elements</h2><h3 id="Paragraph-and-line-breaks"><a href="#Paragraph-and-line-breaks" class="headerlink" title="Paragraph and line breaks"></a>Paragraph and line breaks</h3><p>A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by two or more blank lines. In Typora, you only need one blank line (press <code>Return</code> once) to create a new paragraph.</p><p>Press <code>Shift</code> + <code>Return</code> to create a single line break. Most other markdown parsers will ignore single line breaks, so in order to make other markdown parsers recognize your line break, you can leave two spaces at the end of the line, or insert <code>&lt;br/&gt;</code>.</p><h3 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h3><p>Headers use 1-6 hash (<code>#</code>) characters at the start of the line, corresponding to header levels 1-6. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># This is an H1</span></span><br><span class="line"></span><br><span class="line"><span class="section">## This is an H2</span></span><br><span class="line"></span><br><span class="line"><span class="section">###### This is an H6</span></span><br></pre></td></tr></table></figure><p>In Typora, input ‘#’s followed by title content, and press <code>Return</code> key will create a header.</p><h3 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h3><p>Markdown uses email-style &gt; characters for block quoting. They are presented as:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; This is a blockquote with two paragraphs. This is first paragraph.</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; This is second pragraph. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.</span></span><br></pre></td></tr></table></figure><p>In Typora, inputting ‘&gt;’ followed by your quote contents will generate a quote block. Typora will insert a proper ‘&gt;’ or line break for you. Nested block quotes (a block quote inside another block quote) by adding additional levels of ‘&gt;’.</p><h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><p>Input <code>* list item 1</code> will create an unordered list - the <code>*</code> symbol can be replace with <code>+</code> or <code>-</code>.</p><p>Input <code>1. list item 1</code> will create an ordered list - their markdown source code is as follows:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## un-ordered list</span></span><br><span class="line"><span class="bullet">*</span>   Red</span><br><span class="line"><span class="bullet">*</span>   Green</span><br><span class="line"><span class="bullet">*</span>   Blue</span><br><span class="line"></span><br><span class="line"><span class="section">## ordered list</span></span><br><span class="line"><span class="bullet">1.</span>  Red</span><br><span class="line"><span class="bullet">2.</span> Green</span><br><span class="line"><span class="bullet">3.</span>Blue</span><br></pre></td></tr></table></figure><h3 id="Task-List"><a href="#Task-List" class="headerlink" title="Task List"></a>Task List</h3><p>Task lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] a task list item</span><br><span class="line"><span class="bullet">-</span> [ ] list syntax required</span><br><span class="line"><span class="bullet">-</span> [ ] normal <span class="strong">**formatting**</span>, @mentions, #1234 refs</span><br><span class="line"><span class="bullet">-</span> [ ] incomplete</span><br><span class="line"><span class="bullet">-</span> [x] completed</span><br></pre></td></tr></table></figure><p>You can change the complete&#x2F;incomplete state by clicking on the checkbox before the item.</p><h3 id="Fenced-Code-Blocks"><a href="#Fenced-Code-Blocks" class="headerlink" title="(Fenced) Code Blocks"></a>(Fenced) Code Blocks</h3><p>Typora only supports fences in GitHub Flavored Markdown. Original code blocks in markdown are not supported.</p><p>Using fences is easy: Input ``` and press <code>return</code>. Add an optional language identifier after ``` and we’ll run it through syntax highlighting:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Here&#x27;s an example:</span><br><span class="line"></span><br><span class="line">​<span class="code">```</span></span><br><span class="line"><span class="code">function test() &#123;</span></span><br><span class="line"><span class="code">  console.log(&quot;notice the blank line before this function?&quot;);</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">​```</span></span><br><span class="line"></span><br><span class="line">syntax highlighting:</span><br><span class="line">​<span class="code">```ruby</span></span><br><span class="line"><span class="code">require &#x27;redcarpet&#x27;</span></span><br><span class="line"><span class="code">markdown = Redcarpet.new(&quot;Hello World!&quot;)</span></span><br><span class="line"><span class="code">puts markdown.to_html</span></span><br><span class="line"><span class="code">​```</span></span><br></pre></td></tr></table></figure><h3 id="Math-Blocks"><a href="#Math-Blocks" class="headerlink" title="Math Blocks"></a>Math Blocks</h3><p>You can render <em>LaTeX</em> mathematical expressions using <strong>MathJax</strong>.</p><p>To add a mathematical expression, input <code>$$</code> and press the ‘Return’ key. This will trigger an input field which accepts <em>Tex&#x2F;LaTex</em> source. For example:</p><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 &#x3D;  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$</p><p>In the markdown source file, the math block is a <em>LaTeX</em> expression wrapped by a pair of ‘$$’ marks:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1 \times \mathbf&#123;V&#125;_</span>2 =  \begin&#123;vmatrix&#125;</span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>You can find more details <a href="https://support.typora.io/Math/">here</a>.</p><h3 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h3><p>Input <code>| First Header  | Second Header |</code> and press the <code>return</code> key. This will create a table with two columns.</p><p>After a table is created, putting focus on that table will open up a toolbar for the table where you can resize, align, or delete the table. You can also use the context menu to copy and add&#x2F;delete individual columns&#x2F;rows.</p><p>The full syntax for tables is described below, but it is not necessary to know the full syntax in detail as the markdown source code for tables is generated automatically by Typora.</p><p>In markdown source code, they look like:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| First Header  | Second Header |</span><br><span class="line">| ------------- | ------------- |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br></pre></td></tr></table></figure><p>You can also include inline Markdown such as links, bold, italics, or strikethrough in the table.</p><p>Finally, by including colons (<code>:</code>) within the header row, you can define text in that column to be left-aligned, right-aligned, or center-aligned:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Left-Aligned  | Center Aligned  | Right Aligned |</span><br><span class="line">| :------------ |:---------------:| -----:|</span><br><span class="line">| col 3 is      | some wordy text | $1600 |</span><br><span class="line">| col 2 is      | centered        |   $12 |</span><br><span class="line">| zebra stripes | are neat        |    $1 |</span><br></pre></td></tr></table></figure><p>A colon on the left-most side indicates a left-aligned column; a colon on the right-most side indicates a right-aligned column; a colon on both sides indicates a center-aligned column.</p><h3 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">You can create footnotes like this[^footnote].</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^footnote</span>]: <span class="link">Here is the *text* of the **footnote**.</span></span><br></pre></td></tr></table></figure><p>will produce:</p><p>You can create footnotes like this[^footnote].</p><p>[^footnote]: Here is the <em>text</em> of the <strong>footnote</strong>.</p><p>Hover over the ‘footnote’ superscript to see content of the footnote.</p><h3 id="Horizontal-Rules"><a href="#Horizontal-Rules" class="headerlink" title="Horizontal Rules"></a>Horizontal Rules</h3><p>Inputting <code>***</code> or <code>---</code> on a blank line and pressing <code>return</code> will draw a horizontal line.</p><hr><h3 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h3><p>Typora now supports <a href="http://jekyllrb.com/docs/frontmatter/">YAML Front Matter</a>. Input <code>---</code> at the top of the article and then press <code>Return</code> to introduce a metadata block. Alternatively, you can insert a metadata block from the top menu of Typora.</p><h3 id="Table-of-Contents-TOC"><a href="#Table-of-Contents-TOC" class="headerlink" title="Table of Contents (TOC)"></a>Table of Contents (TOC)</h3><p>Input <code>[toc]</code> and press the <code>Return</code> key. This will create a  “Table of Contents” section. The TOC extracts all headers from the document, and its contents are updated automatically as you add to the document.</p><h2 id="Span-Elements"><a href="#Span-Elements" class="headerlink" title="Span Elements"></a>Span Elements</h2><p>Span elements will be parsed and rendered right after typing. Moving the cursor in middle of those span elements will expand those elements into markdown source. Below is an explanation of the syntax for each span element.</p><h3 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h3><p>Markdown supports two styles of links: inline and reference.</p><p>In both styles, the link text is delimited by [square brackets].</p><p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [<span class="string">an example</span>](<span class="link">http://example.com/ &quot;Title&quot;</span>) inline link.</span><br><span class="line"></span><br><span class="line">[<span class="string">This link</span>](<span class="link">http://example.net/</span>) has no title attribute.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>This is <a href="http://example.com/" title="Title">an example</a> inline link. (<code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</code>)</p><p><a href="http://example.net/">This link</a> has no title attribute. (<code>&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</code>)</p><h4 id="Internal-Links"><a href="#Internal-Links" class="headerlink" title="Internal Links"></a>Internal Links</h4><p><strong>You can set the href to headers</strong>, which will create a bookmark that allow you to jump to that section after clicking. For example:</p><p>Command(on Windows: Ctrl) + Click <a href="#block-elements">This link</a> will jump to header <code>Block Elements</code>. To see how to write that, please move cursor or click that link with <code>⌘</code> key pressed to expand the element into markdown source.</p><h4 id="Reference-Links"><a href="#Reference-Links" class="headerlink" title="Reference Links"></a>Reference Links</h4><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is [<span class="string">an example</span>][<span class="symbol">id</span>] reference-style link.</span><br><span class="line"></span><br><span class="line">Then, anywhere in the document, you define your link label on a line by itself like this:</span><br><span class="line"></span><br><span class="line">[<span class="symbol">id</span>]: <span class="link">http://example.com/  &quot;Optional Title Here&quot;</span></span><br></pre></td></tr></table></figure><p>In Typora, they will be rendered like so:</p><p>This is [an example][id] reference-style link.</p><p>[id]: <a href="http://example.com/">http://example.com/</a>“Optional Title Here”</p><p>The implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — for example, to link the word “Google” to the google.com web site, you could simply write:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Google</span>][<span class="symbol"></span>]</span><br><span class="line">And then define the link:</span><br><span class="line"></span><br><span class="line">[<span class="symbol">Google</span>]: <span class="link">http://google.com/</span></span><br></pre></td></tr></table></figure><p>In Typora, clicking the link will expand it for editing, and command+click will open the hyperlink in your web browser.</p><h3 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h3><p>Typora allows you to insert URLs as links, wrapped by <code>&lt;</code>brackets<code>&gt;</code>.</p><p><code>&lt;i@typora.io&gt;</code> becomes <a href="mailto:&#105;&#64;&#116;&#x79;&#x70;&#x6f;&#x72;&#97;&#46;&#x69;&#x6f;">&#105;&#64;&#116;&#x79;&#x70;&#x6f;&#x72;&#97;&#46;&#x69;&#x6f;</a>.</p><p>Typora will also automatically link standard URLs. e.g: <a href="http://www.google.com/">www.google.com</a>.</p><h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><p>Images have similar syntax as links, but they require an additional <code>!</code> char before the start of the link. The syntax for inserting an image looks like this:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg &quot;Optional title&quot;</span>)</span><br></pre></td></tr></table></figure><p>You are able to use drag &amp; drop to insert an image from an image file or your web browser. You can modify the markdown source code by clicking on the image. A relative path will be used if the image that is added using drag &amp; drop is in same directory or sub-directory as the document you’re currently editing.</p><p>If you’re using markdown for building websites, you may specify a URL prefix for the image preview on your local computer with property <code>typora-root-url</code> in YAML Front Matters. For example, input <code>typora-root-url:/User/Abner/Website/typora.io/</code> in YAML Front Matters, and then <code>![alt](/blog/img/test.png)</code> will be treated as <code>![alt](file:///User/Abner/Website/typora.io/blog/img/test.png)</code> in Typora.</p><p>You can find more details <a href="https://support.typora.io/Images/">here</a>.</p><h3 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h3><p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML <code>&lt;em&gt;</code> tag. E.g:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*single asterisks*</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">_single underscores_</span></span><br></pre></td></tr></table></figure><p>output:</p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p>GFM will ignore underscores in words, which is commonly used in code and names, like this:</p><blockquote><p>wow_great_stuff</p><p>do_this_and_do_that_and_another_thing.</p></blockquote><p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="emphasis">*this text is surrounded by literal asterisks\*</span></span><br></pre></td></tr></table></figure><p>Typora recommends using the <code>*</code> symbol.</p><h3 id="Strong"><a href="#Strong" class="headerlink" title="Strong"></a>Strong</h3><p>A double <code>*</code> or <code>_</code> will cause its enclosed contents to be wrapped with an HTML <code>&lt;strong&gt;</code> tag, e.g:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**double asterisks**</span></span><br><span class="line"></span><br><span class="line"><span class="strong">__double underscores__</span></span><br></pre></td></tr></table></figure><p>output:</p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><p>Typora recommends using the <code>**</code> symbol.</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>To indicate an inline span of code, wrap it with backtick quotes (&#96;). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use the <span class="code">`printf()`</span> function.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>Use the <code>printf()</code> function.</p><h3 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h3><p>GFM adds syntax to create strikethrough text, which is missing from standard Markdown.</p><p><code>~~Mistaken text.~~</code> becomes <del>Mistaken text.</del></p><h3 id="Underlines"><a href="#Underlines" class="headerlink" title="Underlines"></a>Underlines</h3><p>Underline is powered by raw HTML.</p><p><code>&lt;u&gt;Underline&lt;/u&gt;</code> becomes <u>Underline</u>.</p><h3 id="Emoji-smile"><a href="#Emoji-smile" class="headerlink" title="Emoji :smile:"></a>Emoji :smile:</h3><p>Input emoji with syntax <code>:smile:</code>.</p><p>User can trigger auto-complete suggestions for emoji by pressing <code>ESC</code> key, or trigger it automatically after enabling it on preference panel. Also, inputting UTF-8 emoji characters directly is also supported by going to <code>Edit</code> -&gt; <code>Emoji &amp; Symbols</code> in the menu bar (macOS).</p><h3 id="Inline-Math"><a href="#Inline-Math" class="headerlink" title="Inline Math"></a>Inline Math</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>$</code> to wrap a TeX command. For example: <code>$\lim_&#123;x \to \infty&#125; \exp(-x) = 0$</code> will be rendered as LaTeX command.</p><p>To trigger inline preview for inline math: input “$”, then press the <code>ESC</code> key, then input a TeX command.</p><p>You can find more details <a href="https://support.typora.io/Math/">here</a>.</p><h3 id="Subscript"><a href="#Subscript" class="headerlink" title="Subscript"></a>Subscript</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>~</code> to wrap subscript content. For example: <code>H~2~O</code>, <code>X~long\ text~</code>&#x2F;</p><h3 id="Superscript"><a href="#Superscript" class="headerlink" title="Superscript"></a>Superscript</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>^</code> to wrap superscript content. For example: <code>X^2^</code>.</p><h3 id="Highlight"><a href="#Highlight" class="headerlink" title="Highlight"></a>Highlight</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>==</code> to wrap highlight content. For example: <code>==highlight==</code>.</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>You can use HTML to style content what pure Markdown does not support. For example, use <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> to add text with red color.</p><h3 id="Embed-Contents"><a href="#Embed-Contents" class="headerlink" title="Embed Contents"></a>Embed Contents</h3><p>Some websites provide iframe-based embed code which you can also paste into Typora. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">&#x27;265&#x27;</span> <span class="attr">scrolling</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">title</span>=<span class="string">&#x27;Fancy Animated SVG Menu&#x27;</span> <span class="attr">src</span>=<span class="string">&#x27;http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2&#x27;</span> <span class="attr">frameborder</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">allowtransparency</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">allowfullscreen</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;width: 100%;&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>You can use the <code>&lt;video&gt;</code> HTML tag to embed videos. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;xxx.mp4&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Other-HTML-Support"><a href="#Other-HTML-Support" class="headerlink" title="Other HTML Support"></a>Other HTML Support</h3><p>You can find more details <a href="https://support.typora.io/HTML/">here</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown-For-Typora&quot;&gt;&lt;a href=&quot;#Markdown-For-Typora&quot; class=&quot;headerlink&quot; title=&quot;Markdown For Typora&quot;&gt;&lt;/a&gt;Markdown For Typora&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python第一次课堂作业</title>
    <link href="https://zxb6.github.io/2022/07/14/2021-9-17%20python%20%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AF%BE%E5%A0%82%E4%BD%9C%E4%B8%9A%20154423/"/>
    <id>https://zxb6.github.io/2022/07/14/2021-9-17%20python%20%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AF%BE%E5%A0%82%E4%BD%9C%E4%B8%9A%20154423/</id>
    <published>2022-07-14T08:23:04.000Z</published>
    <updated>2022-10-20T09:50:19.447Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-作业"><a href="#python-作业" class="headerlink" title="python 作业"></a>python 作业</h1><h2 id="课堂作业"><a href="#课堂作业" class="headerlink" title="课堂作业"></a>课堂作业</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h3><p><strong>20计科一班</strong> <em>朱贤兵 202005210146</em></p><table><thead><tr><th>项目</th><th>Value</th></tr></thead><tbody><tr><td>电脑</td><td>$1600</td></tr><tr><td>手机</td><td>$12</td></tr><tr><td>导管</td><td>$1</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import cv2</span><br><span class="line"></span><br><span class="line"># 导入人脸级联分类器引擎，&#x27;.xml&#x27;文件里包含训练出来的人脸特征，cv2.data.haarcascades即为存放所有级联分类器模型文件的目录</span><br><span class="line">face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + &#x27;haarcascade_frontalface_default.xml&#x27;)</span><br><span class="line"># 导入人眼级联分类器引擎吗，&#x27;.xml&#x27;文件里包含训练出来的人眼特征</span><br><span class="line">eye_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + &#x27;haarcascade_eye.xml&#x27;)</span><br><span class="line"></span><br><span class="line">cap=cv2.VideoCapture(0)</span><br><span class="line">while True:</span><br><span class="line">    success,img = cap.read()</span><br><span class="line"># 用人脸级联分类器引擎进行人脸识别，返回的faces为人脸坐标列表，1.3是放大比例，5是重复识别次数</span><br><span class="line">    faces = face_cascade.detectMultiScale(img, 1.3, 5)</span><br><span class="line"></span><br><span class="line"># 对每一张脸，进行如下操作</span><br><span class="line">    for (x, y, w, h) in faces:</span><br><span class="line">    # 画出人脸框，蓝色（BGR色彩体系），画笔宽度为2</span><br><span class="line">        img = cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 2)</span><br><span class="line">    # 框选出人脸区域，在人脸区域而不是全图中进行人眼检测，节省计算资源</span><br><span class="line">        face_area = img[y:y + h, x:x + w]</span><br><span class="line">        eyes = eye_cascade.detectMultiScale(face_area)</span><br><span class="line">    # 用人眼级联分类器引擎在人脸区域进行人眼识别，返回的eyes为眼睛坐标列表</span><br><span class="line">        for (ex, ey, ew, eh) in eyes:</span><br><span class="line">    # 画出人眼框，绿色，画笔宽度为1</span><br><span class="line">            cv2.rectangle(face_area, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 1)</span><br><span class="line">    cv2.putText(face_area, &quot;human&quot;, (10, 20), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)</span><br><span class="line">    cv2.imshow(&#x27;img2&#x27;, img)</span><br><span class="line">    cv2.waitKey(1)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\asus\Desktop\1.png" alt="截图1"><br>$$<br>\Gamma(z) &#x3D; \int_0^\infty t^{z-1}e^{-t}dt,<br>$$<br><a href="https://archive.eclipse.org/technology/babel/update-site/R0.17.1/2019-12/">https://archive.eclipse.org/technology/babel/update-site/R0.17.1/2019-12/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python-作业&quot;&gt;&lt;a href=&quot;#python-作业&quot; class=&quot;headerlink&quot; title=&quot;python 作业&quot;&gt;&lt;/a&gt;python 作业&lt;/h1&gt;&lt;h2 id=&quot;课堂作业&quot;&gt;&lt;a href=&quot;#课堂作业&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://zxb6.github.io/2022/07/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://zxb6.github.io/2022/07/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-07-14T08:23:04.000Z</published>
    <updated>2022-10-20T09:50:43.530Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zxb6.github.io/2022/07/14/hello-world/"/>
    <id>https://zxb6.github.io/2022/07/14/hello-world/</id>
    <published>2022-07-14T07:29:31.198Z</published>
    <updated>2022-10-20T09:50:30.687Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python作业</title>
    <link href="https://zxb6.github.io/2021/09/17/2021-9-17%20%E5%A7%93%E5%90%8D%E5%AD%A6%E5%8F%B7python%E6%88%90%E7%BB%A9%E5%BC%A0%E4%B8%890188%20150520/"/>
    <id>https://zxb6.github.io/2021/09/17/2021-9-17%20%E5%A7%93%E5%90%8D%E5%AD%A6%E5%8F%B7python%E6%88%90%E7%BB%A9%E5%BC%A0%E4%B8%890188%20150520/</id>
    <published>2021-09-17T08:23:04.000Z</published>
    <updated>2022-10-20T09:50:24.300Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>姓名</th><th>学号</th><th>python成绩</th></tr></thead><tbody><tr><td>张三</td><td>01</td><td>88</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;姓名&lt;/th&gt;
&lt;th&gt;学号&lt;/th&gt;
&lt;th&gt;python成绩&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;张三&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP8266</title>
    <link href="https://zxb6.github.io/2021/05/06/2021-5-6%20README%20162756/"/>
    <id>https://zxb6.github.io/2021/05/06/2021-5-6%20README%20162756/</id>
    <published>2021-05-06T08:23:04.000Z</published>
    <updated>2022-10-20T05:48:01.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ESP8266-Network-Clock"><a href="#ESP8266-Network-Clock" class="headerlink" title="ESP8266_Network_Clock"></a>ESP8266_Network_Clock</h1><p>Use 7-Seg LED, 1602 LCD, 12864 display, LED Dot Matrix and ESP8266 NodeMCU to make a network clock<br>Demo: <a href="https://www.bilibili.com/video/av50338779">https://www.bilibili.com/video/av50338779</a><br>      <a href="https://www.bilibili.com/video/BV1Cy4y177h9">https://www.bilibili.com/video/BV1Cy4y177h9</a></p><p>Arduino Time Library: <a href="https://github.com/PaulStoffregen/Time">https://github.com/PaulStoffregen/Time</a><br>Arduino Timezone Library: <a href="https://github.com/JChristensen/Timezone">https://github.com/JChristensen/Timezone</a>  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ESP8266-Network-Clock&quot;&gt;&lt;a href=&quot;#ESP8266-Network-Clock&quot; class=&quot;headerlink&quot; title=&quot;ESP8266_Network_Clock&quot;&gt;&lt;/a&gt;ESP8266_Network_Clock&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java个人例题讲解</title>
    <link href="https://zxb6.github.io/2021/04/05/2021-4-5%20static%20%E4%BF%AE%E9%A5%B0%E7%AC%A6%E8%83%BD%E5%A4%9F%E4%B8%8E%E5%8F%98%E9%87%8F%E3%80%81%E6%96%B9%E6%B3%95%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%EF%BC%8C%E8%A1%A8%E7%A4%BA%E6%98%AF%E2%80%9C%E9%9D%99%E6%80%81%E2%80%9D%E7%9A%84%E3%80%82%20120124/"/>
    <id>https://zxb6.github.io/2021/04/05/2021-4-5%20static%20%E4%BF%AE%E9%A5%B0%E7%AC%A6%E8%83%BD%E5%A4%9F%E4%B8%8E%E5%8F%98%E9%87%8F%E3%80%81%E6%96%B9%E6%B3%95%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%EF%BC%8C%E8%A1%A8%E7%A4%BA%E6%98%AF%E2%80%9C%E9%9D%99%E6%80%81%E2%80%9D%E7%9A%84%E3%80%82%20120124/</id>
    <published>2021-04-05T04:01:04.000Z</published>
    <updated>2022-10-20T09:50:00.262Z</updated>
    
    <content type="html"><![CDATA[<p>static 修饰符能够与变量、方法一起使用，表示是“静态”的。</p><p>静态变量和静态方法能够通过类名来访问，不需要创建一个类的对象来访问该类的静态成员，所以static修饰的成员又称作类变量和类方法。静态变量与实例变量不同，实例变量总是通过对象来访问，因为它们的值在对象和对象之间有所不同。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> j;</span><br><span class="line"></span><br><span class="line">  Demo() &#123;</span><br><span class="line">    <span class="built_in">this</span>.j = <span class="number">20</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;类变量 i=&quot;</span> + Demo.i);</span><br><span class="line">    <span class="type">Demo</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">    System.out.println(<span class="string">&quot;实例变量 j=&quot;</span> + obj.j);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br>类变量 i&#x3D;10<br>实例变量 j&#x3D;20</p><p>static 的内存分配<br>静态变量属于类，不属于任何独立的对象，无需创建实例就可以访问。实例变量则不同，每创建一个对象，都会分配一次内存空间，不同变量的内存相互独立，互不影响。</p><p>请看下面的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="type">int</span> i;</span><br><span class="line">  <span class="type">int</span> j;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Demo</span> <span class="variable">obj1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">    obj1.i = <span class="number">10</span>;</span><br><span class="line">    obj1.j = <span class="number">20</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">Demo</span> <span class="variable">obj2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">    </span><br><span class="line">    System.out.println(<span class="string">&quot;obj1.i=&quot;</span> + obj1.i + <span class="string">&quot;, obj1.j=&quot;</span> + obj1.j);</span><br><span class="line">    System.out.println(<span class="string">&quot;obj2.i=&quot;</span> + obj2.i + <span class="string">&quot;, obj2.j=&quot;</span> + obj2.j);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br>obj1.i&#x3D;10, obj1.j&#x3D;20<br>obj2.i&#x3D;10, obj2.j&#x3D;0</p><p>静态方法<br>静态方法是一种不能向对象实施操作的方法。例如，Math 类的 pow() 方法就是一个静态方法，语法为 Math.pow(x, a)，用来计算 x 的 a 次幂，在使用时无需创建任何 Math 对象。</p><p>因为静态方法不能操作对象，所以不能在静态方法中访问实例变量，只能访问自身类的静态变量。</p><p>以下情形可以使用静态方法：<br>一个方法不需要访问对象状态，其所需参数都是通过显式参数提供（例如 Math.pow()）。<br>一个方法只需要访问类的静态变量。</p><p>读者肯定注意到，main() 也是一个静态方法，不对任何对象进行操作。实际上，在程序启动时还没有任何对象，main() 方法是程序的入口，将被执行并创建程序所需的对象。</p><p>关于静态变量和静态方法的总结：<br>一个类的静态方法只能访问静态变量；<br>一个类的静态方法不能够直接调用非静态方法；<br>如访问控制权限允许，静态变量和静态方法也可以通过对象来访问，但是不被推荐；<br>静态方法中不存在当前对象，因而不能使用 this，当然也不能使用 super；<br>静态方法不能被非静态方法覆盖；<br>构造方法不允许声明为 static 的；<br>局部变量不能使用static修饰。</p><p>静态方法举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> Demo.sum(<span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;10+10=&quot;</span> + sum);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br>10+10&#x3D;20</p><p>static 方法不需它所属的类的任何实例就会被调用，因此没有 this 值，不能访问实例变量，否则会引起编译错误。</p><p>注意：实例变量只能通过对象来访问，不能通过类访问。<br>静态初始器（静态块）<br>块是由大括号包围的一段代码。静态初始器(Static Initializer)是一个存在于类中、方法外面的静态块。静态初始器仅仅在类装载的时候（第一次使用类的时候）执行一次，往往用来初始化静态变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">示例代码：</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">static</span>&#123;</span><br><span class="line">    i = <span class="number">10</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;Now in static block.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;test method: i=&quot;</span> + i);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Demo.i=&quot;</span> + Demo.i);</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Demo</span>().test();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果是：<br>Now in static block.<br>Demo.i&#x3D;10<br>test method: i&#x3D;10<br>静态导入<br>静态导入是 Java 5 的新增特性，用来导入类的静态变量和静态方法。</p><p>一般我们导入类都这样写：<br>import packageName.className; &#x2F;&#x2F; 导入某个特定的类<br>或<br>import packageName.*; &#x2F;&#x2F; 导入包中的所有类</p><p>而静态导入可以这样写：<br>import static packageName.className.methonName; &#x2F;&#x2F; 导入某个特定的静态方法<br>或<br>import static packageName.className.*; &#x2F;&#x2F; 导入类中的所有静态成员</p><p>导入后，可以在当前类中直接用方法名调用静态方法，不必再用 className.methodName 来访问。</p><p>对于使用频繁的静态变量和静态方法，可以将其静态导入。静态导入的好处是可以简化一些操作，例如输出语句 System.out.println(); 中的 out 就是 System 类的静态变量，可以通过 import static java.lang.System.*; 将其导入，下次直接调用 out.println() 就可以了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">请看下面的代码：<span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    out.println(<span class="string">&quot;产生的一个随机数：&quot;</span> + random());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br>产生的一个随机数：0.05800891549018705</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;static 修饰符能够与变量、方法一起使用，表示是“静态”的。&lt;/p&gt;
&lt;p&gt;静态变量和静态方法能够通过类名来访问，不需要创建一个类的对象来访问该类的静态成员，所以static修饰的成员又称作类变量和类方法。静态变量与实例变量不同，实例变量总是通过对象来访问，因为它们的值</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java数据类型</title>
    <link href="https://zxb6.github.io/2021/03/25/2021-3-25%20java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%20001252/"/>
    <id>https://zxb6.github.io/2021/03/25/2021-3-25%20java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%20001252/</id>
    <published>2021-03-25T08:23:04.000Z</published>
    <updated>2022-10-20T09:46:24.141Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java数据类型"><a href="#java数据类型" class="headerlink" title="java数据类型"></a>java数据类型</h1><h2 id="1-基本类型（primitive-type）"><a href="#1-基本类型（primitive-type）" class="headerlink" title="1.基本类型（primitive type）"></a>1.基本类型（primitive type）</h2><h2 id="2-引用类型（reference-type）"><a href="#2-引用类型（reference-type）" class="headerlink" title="2.引用类型（reference type）"></a>2.引用类型（reference type）</h2><p>1.1数值类型</p><p>1.1.1整数类型  byte 占1个字节</p><p>​  short 占2个字节</p><p>​      int &#x2F; long占4个字节</p><p>1.1.2浮点类型  float 占4个字节</p><p>​  double 占8个字节</p><p>1.1.3字符类型 char占2个字节</p><p>1.2 boolean 类型 只占1个字节 并且值只有true和false</p><p>2.1类</p><p>2.2接口</p><p>2.3数组</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">只能由高往低赋值，不能低到高</span><br><span class="line"><span class="built_in">float</span> 类型赋整值  后面必须加f或是F  </span><br><span class="line">同样long 一般加L</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;java数据类型&quot;&gt;&lt;a href=&quot;#java数据类型&quot; class=&quot;headerlink&quot; title=&quot;java数据类型&quot;&gt;&lt;/a&gt;java数据类型&lt;/h1&gt;&lt;h2 id=&quot;1-基本类型（primitive-type）&quot;&gt;&lt;a href=&quot;#1-基本类型（</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于DOS</title>
    <link href="https://zxb6.github.io/2021/03/24/%E5%85%B3%E4%BA%8EDOS/"/>
    <id>https://zxb6.github.io/2021/03/24/%E5%85%B3%E4%BA%8EDOS/</id>
    <published>2021-03-24T09:02:04.000Z</published>
    <updated>2022-10-20T09:50:37.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于DOS"><a href="#关于DOS" class="headerlink" title="关于DOS"></a>关于DOS</h1><p><strong>win +R 输入&#x3D;&#x3D;cmd&#x3D;&#x3D;</strong></p><h2 id="常用的DOS命令"><a href="#常用的DOS命令" class="headerlink" title="常用的DOS命令"></a>常用的DOS命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.<span class="comment">#盘符切换 直接加入盘加: 如 E:</span></span><br><span class="line">2.<span class="comment">#查看目录下文件 dir</span></span><br><span class="line">3.<span class="comment">#目录切换 cd change directory加/d 加地址</span></span><br><span class="line">4.<span class="comment">#返回上一级cd ..</span></span><br><span class="line">5.<span class="comment">#进入目录 (先dir 查询) cd 直接加目录</span></span><br><span class="line">6.<span class="comment">#清理屏幕 cls</span></span><br><span class="line">7.<span class="comment">#退出 exit</span></span><br><span class="line">8.<span class="comment">#查看电脑ip ipconfig  calc计算器 notepad记事本 mspaint画图</span></span><br><span class="line">9.<span class="comment">#ping 命令 ping 直接加网址测试延迟</span></span><br><span class="line">10.<span class="comment">#md 命令 新建文件夹  cd&gt;1.txt可以直接新建 删除为del 1.txt</span></span><br><span class="line">11.<span class="comment">#rd 命令 删除目录 要求返回上一级</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于DOS&quot;&gt;&lt;a href=&quot;#关于DOS&quot; class=&quot;headerlink&quot; title=&quot;关于DOS&quot;&gt;&lt;/a&gt;关于DOS&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;win +R 输入&amp;#x3D;&amp;#x3D;cmd&amp;#x3D;&amp;#x3D;&lt;/strong&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
